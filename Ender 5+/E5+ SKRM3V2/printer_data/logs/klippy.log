=============== Log rollover at Mon Jun 24 08:11:46 2024 ===============
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-I', '/home/pi/printer_data/comms/klippy.serial', '-l', '/home/pi/printer_data/logs/klippy.log', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-256-g6d700502'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ARMv7 Processor rev 3 (v7l)
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Mon Jun 24 08:11:46 2024 (1719231106.8 2118959.1)
===== Config file =====
[bed_mesh]
speed = 200
horizontal_move_z = 5
mesh_min = 25,25
mesh_max = 290,330
probe_count = 4,4
mesh_pps = 2,2
algorithm = bicubic
fade_start = 1
fade_end = 10
fade_target = 0

[bed_screws]
screw1 = 30,45
screw2 = 335,315
screw3 = 30,315
screw4 = 335,45

[screws_tilt_adjust]
screw1 = 81,43
screw1_name = front left screw
screw2 = 350,315
screw2_name = rear right screw
screw3 = 81,315
screw3_name = front right screw
screw4 = 350,45
screw4_name = rear left screw
horizontal_move_z = 5
speed = 50
screw_thread = CW-M4

[stepper_x]
step_pin = PB13
dir_pin = !PB12
enable_pin = !PB14
microsteps = 16
rotation_distance = 40
endstop_pin = ^PC0
position_endstop = 350
position_max = 350
position_min = 0
homing_speed = 100

[tmc2209 stepper_x]
uart_pin = PC11
tx_pin = PC10
uart_address = 0
run_current = 0.680
stealthchop_threshold = 999999

[stepper_y]
step_pin = PB10
dir_pin = !PB2
enable_pin = !PB11
microsteps = 16
rotation_distance = 40
endstop_pin = ^PC1
position_endstop = 350
position_max = 350
position_min = 0
homing_speed = 75

[tmc2209 stepper_y]
uart_pin = PC11
tx_pin = PC10
uart_address = 2
run_current = 0.700
stealthchop_threshold = 999999

[stepper_z]
step_pin = PB0
dir_pin = !PC5
enable_pin = !PB1
microsteps = 16
rotation_distance = 4
endstop_pin = probe:z_virtual_endstop
position_max = 400
position_min = -3
homing_speed = 10

[tmc2209 stepper_z]
uart_pin = PC11
tx_pin = PC10
uart_address = 1
run_current = 0.800
stealthchop_threshold = 999999

[gcode_macro GET_TIMELAPSE_SETUP]
description = Print the Timelapse setup
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set output_txt = ["Timelapse Setup:"] %}
	{% set _dummy = output_txt.append("enable: %s" % tl.enable) %}
	{% set _dummy = output_txt.append("park: %s" % tl.park.enable) %}
	{% if tl.park.enable %}
	{% set _dummy = output_txt.append("park position: %s time: %s s" % (tl.park.pos, tl.park.time)) %}
	{% set _dummy = output_txt.append("park cord x:%s y:%s dz:%s" % (tl.park.coord.x, tl.park.coord.y, tl.park.coord.dz)) %}
	{% set _dummy = output_txt.append("travel speed: %s mm/s" % tl.speed.travel) %}
	{% endif %}
	{% set _dummy = output_txt.append("fw_retract: %s" % tl.extruder.fw_retract) %}
	{% if not tl.extruder.fw_retract %}
	{% set _dummy = output_txt.append("retract: %s mm speed: %s mm/s" % (tl.extruder.retract, tl.speed.retract)) %}
	{% set _dummy = output_txt.append("extrude: %s mm speed: %s mm/s" % (tl.extruder.extrude, tl.speed.extrude)) %}
	{% endif %}
	{% set _dummy = output_txt.append("verbose: %s" % tl.verbose) %}
	{action_respond_info(output_txt|join("\n"))}

[gcode_macro _SET_TIMELAPSE_SETUP]
description = Set user parameters for timelapse
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	{% set park = {'min'   : {'x': (min.x / 1.42)|round(3) if round_bed else min.x|round(3),
	'y': (min.y / 1.42)|round(3) if round_bed else min.y|round(3)},
	'max'   : {'x': (max.x / 1.42)|round(3) if round_bed else max.x|round(3),
	'y': (max.y / 1.42)|round(3) if round_bed else max.y|round(3)},
	'center': {'x': (max.x-(max.x-min.x)/2)|round(3),
	'y': (max.y-(max.y-min.y)/2)|round(3)}} %}
	
	{% if params.ENABLE %}
	{% if params.ENABLE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=enable VALUE={True if params.ENABLE|lower == 'true' else False}
	{% else %}
	{action_raise_error("ENABLE=%s not supported. Allowed values are [True, False]" % params.ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.VERBOSE %}
	{% if params.VERBOSE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=verbose VALUE={True if params.VERBOSE|lower == 'true' else False}
	{% else %}
	{action_raise_error("VERBOSE=%s not supported. Allowed values are [True, False]" % params.VERBOSE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_X %}
	{% if params.CUSTOM_POS_X|float >= min.x and params.CUSTOM_POS_X|float <= max.x %}
	{% set _dummy = tl.park.custom.update({'x':params.CUSTOM_POS_X|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_X=%s must be within [%s - %s]" % (params.CUSTOM_POS_X, min.x, max.x))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_Y %}
	{% if params.CUSTOM_POS_Y|float >= min.y and params.CUSTOM_POS_Y|float <= max.y %}
	{% set _dummy = tl.park.custom.update({'y':params.CUSTOM_POS_Y|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_Y=%s must be within [%s - %s]" % (params.CUSTOM_POS_Y, min.y, max.y))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_DZ %}
	{% if params.CUSTOM_POS_DZ|float >= min.z and params.CUSTOM_POS_DZ|float <= max.z %}
	{% set _dummy = tl.park.custom.update({'dz':params.CUSTOM_POS_DZ|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_DZ=%s must be within [%s - %s]" % (params.CUSTOM_POS_DZ, min.z, max.z))}
	{% endif %}
	{% endif %}
	{% if params.PARK_ENABLE %}
	{% if params.PARK_ENABLE|lower is in ['true', 'false'] %}
	{% set _dummy = tl.park.update({'enable':True if params.PARK_ENABLE|lower == 'true' else False}) %}
	{% else %}
	{action_raise_error("PARK_ENABLE=%s not supported. Allowed values are [True, False]" % params.PARK_ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.PARK_POS %}
	{% if params.PARK_POS|lower is in ['center','front_left','front_right','back_left','back_right','custom','x_only','y_only'] %}
	{% set dic = {'center'      : {'x': park.center.x   , 'y': park.center.y   , 'dz': 1                },
	'front_left'  : {'x': park.min.x      , 'y': park.min.y      , 'dz': 0                },
	'front_right' : {'x': park.max.x      , 'y': park.min.y      , 'dz': 0                },
	'back_left'   : {'x': park.min.x      , 'y': park.max.y      , 'dz': 0                },
	'back_right'  : {'x': park.max.x      , 'y': park.max.y      , 'dz': 0                },
	'custom'      : {'x': tl.park.custom.x, 'y': tl.park.custom.y, 'dz': tl.park.custom.dz},
	'x_only'      : {'x': tl.park.custom.x, 'y': 'none'          , 'dz': tl.park.custom.dz},
	'y_only'      : {'x': 'none'          , 'y': tl.park.custom.y, 'dz': tl.park.custom.dz}} %}
	{% set _dummy = tl.park.update({'pos':params.PARK_POS|lower}) %}
	{% set _dummy = tl.park.update({'coord':dic[tl.park.pos]}) %}
	{% else %}
	{action_raise_error("PARK_POS=%s not supported. Allowed values are [CENTER, FRONT_LEFT, FRONT_RIGHT, BACK_LEFT, BACK_RIGHT, CUSTOM, X_ONLY, Y_ONLY]"
	% params.PARK_POS|upper)}
	{% endif %}
	{% endif %}
	{% if params.PARK_TIME %}
	{% if params.PARK_TIME|float >= 0.0 %}
	{% set _dummy = tl.park.update({'time':params.PARK_TIME|float|round(3)}) %}
	{% else %}
	{action_raise_error("PARK_TIME=%s must be a positive number" % params.PARK_TIME)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=park VALUE="{tl.park}"
	{% if params.TRAVEL_SPEED %}
	{% if params.TRAVEL_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'travel':params.TRAVEL_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("TRAVEL_SPEED=%s must be larger than 0" % params.TRAVEL_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_SPEED %}
	{% if params.RETRACT_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'retract':params.RETRACT_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_SPEED=%s must be larger than 0" % params.RETRACT_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.EXTRUDE_SPEED %}
	{% if params.EXTRUDE_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'extrude':params.EXTRUDE_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_SPEED=%s must be larger than 0" % params.EXTRUDE_SPEED)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=speed VALUE="{tl.speed}"
	{% if params.EXTRUDE_DISTANCE %}
	{% if params.EXTRUDE_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'extrude':params.EXTRUDE_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_DISTANCE=%s must be specified as positiv number" % params.EXTRUDE_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_DISTANCE %}
	{% if params.RETRACT_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'retract':params.RETRACT_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_DISTANCE=%s must be specified as positiv number" % params.RETRACT_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.FW_RETRACT %}
	{% if params.FW_RETRACT|lower is in ['true', 'false'] %}
	{% if 'firmware_retraction' in printer.configfile.settings %}
	{% set _dummy = tl.extruder.update({'fw_retract': True if params.FW_RETRACT|lower == 'true' else False}) %}
	{% else %}
	{% set _dummy = tl.extruder.update({'fw_retract':False}) %}
	{% if params.FW_RETRACT|capitalize == 'True' %}
	{action_raise_error("[firmware_retraction] not defined in printer.cfg. Can not enable fw_retract")}
	{% endif %}
	{% endif %}
	{% else %}
	{action_raise_error("FW_RETRACT=%s not supported. Allowed values are [True, False]" % params.FW_RETRACT|capitalize)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=extruder VALUE="{tl.extruder}"
	{% if printer.configfile.settings['gcode_macro pause'] is defined %}
	{% set _dummy = tl.macro.update({'pause': printer.configfile.settings['gcode_macro pause'].rename_existing}) %}
	{% endif %}
	{% if printer.configfile.settings['gcode_macro resume'] is defined %}
	{% set _dummy = tl.macro.update({'resume': printer.configfile.settings['gcode_macro resume'].rename_existing}) %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=macro VALUE="{tl.macro}"

[gcode_macro TIMELAPSE_TAKE_FRAME]
description = Take Timelapse shoot
variable_enable = False
variable_takingframe = False
variable_park = {'enable': False,
	'pos'   : 'center',
	'time'  : 0.1,
	'custom': {'x': 0, 'y': 0, 'dz': 0},
	'coord' : {'x': 0, 'y': 0, 'dz': 0}}
variable_extruder = {'fw_retract': False,
	'retract': 1.0,
	'extrude': 1.0}
variable_speed = {'travel': 100,
	'retract': 15,
	'extrude': 15}
variable_verbose = True
variable_check_time = 0.5
variable_restore = {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500, 'e':0, 'factor': {'speed': 1.0, 'extrude': 1.0}}
variable_macro = {'pause': 'PAUSE', 'resume': 'RESUME'}
variable_is_paused = False
gcode = 
	{% set hyperlapse = True if params.HYPERLAPSE and params.HYPERLAPSE|lower =='true' else False %}
	{% if enable %}
	{% if (hyperlapse and printer['gcode_macro HYPERLAPSE'].run) or
	(not hyperlapse and not printer['gcode_macro HYPERLAPSE'].run) %}
	{% if park.enable %}
	{% set pos = {'x': 'X' + park.coord.x|string if park.pos != 'y_only' else '',
	'y': 'Y' + park.coord.y|string if park.pos != 'x_only' else '',
	'z': 'Z'+ [printer.gcode_move.gcode_position.z + park.coord.dz, printer.toolhead.axis_maximum.z]|min|string} %}
	{% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
	'extrude'    : printer.gcode_move.absolute_extrude},
	'speed'   : printer.gcode_move.speed,
	'e'       : printer.gcode_move.gcode_position.e,
	'factor'  : {'speed'  : printer.gcode_move.speed_factor,
	'extrude': printer.gcode_move.extrude_factor}} %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=restore VALUE="{restore}"
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, minimum extruder temperature not reached!")}{% endif %}
	{% else %}
	{% if extruder.fw_retract %}
	G10
	{% else %}
	M83
	G0 E-{extruder.retract} F{speed.retract * 60}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=True
	{macro.pause}
	SET_GCODE_OFFSET X=0 Y=0
	G90
	{% if "xyz" not in printer.toolhead.homed_axes %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, axis not homed yet!")}{% endif %}
	{% else %}
	G0 {pos.x} {pos.y} {pos.z} F{speed.travel * 60}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=takingframe VALUE=True
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION={check_time}
	M400
	{% endif %}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE={hyperlapse}
	{% endif %}
	{% else %}
	{% if verbose %}{action_respond_info("Timelapse: disabled, take frame ignored")}{% endif %}
	{% endif %}

[gcode_macro _TIMELAPSE_NEW_FRAME]
description = action call for timelapse shoot. must be a seperate macro
gcode = 
	{action_call_remote_method("timelapse_newframe",
	macropark=printer['gcode_macro TIMELAPSE_TAKE_FRAME'].park,
	hyperlapse=params.HYPERLAPSE)}

[delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME]
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set factor = {'speed': printer.gcode_move.speed_factor, 'extrude': printer.gcode_move.extrude_factor} %}
	{% if tl.takingframe %}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION={tl.check_time}
	{% else %}
	{tl.macro.resume} VELOCITY={tl.speed.travel}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=False
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{action_respond_info("Timelapse: Warning minimum extruder temperature not reached!")}
	{% else %}
	{% if tl.extruder.fw_retract %}
	G11
	{% else %}
	G0 E{tl.extruder.extrude} F{tl.speed.extrude * 60}
	G0 F{tl.restore.speed}
	{% if tl.restore.absolute.extrude %}
	M82
	G92 E{tl.restore.e}
	{% endif %}
	{% endif %}
	{% endif %}
	{% if tl.restore.factor.speed   != factor.speed   %} M220 S{(factor.speed*100)|round(0)}   {% endif %}
	{% if tl.restore.factor.extrude != factor.extrude %} M221 S{(factor.extrude*100)|round(0)} {% endif %}
	{% if not tl.restore.absolute.coordinates %} G91 {% endif %}
	{% endif %}

[gcode_macro HYPERLAPSE]
description = Start/Stop a hyperlapse recording
variable_cycle = 0
variable_run = False
gcode = 
	{% set cycle = params.CYCLE|default(30)|int %}
	{% if params.ACTION and params.ACTION|lower == 'start' %}
	{action_respond_info("Hyperlapse: frames started (Cycle %d sec)" % cycle)}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=True
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={cycle}
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True
	{% elif params.ACTION and params.ACTION|lower == 'stop' %}
	{% if run %}{action_respond_info("Hyperlapse: frames stopped")}{% endif %}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=False
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION=0
	{% else %}
	{action_raise_error("Hyperlapse: No valid input parameter
	Use:
	- HYPERLAPSE ACTION=START [CYCLE=time]
	- HYPERLAPSE ACTION=STOP")}
	{% endif %}

[delayed_gcode _HYPERLAPSE_LOOP]
gcode = 
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={printer["gcode_macro HYPERLAPSE"].cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True

[gcode_macro TIMELAPSE_RENDER]
description = Render Timelapse video and wait for the result
variable_render = False
variable_run_identifier = 0
gcode = 
	{action_respond_info("Timelapse: Rendering started")}
	{action_call_remote_method("timelapse_render", byrendermacro="True")}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=render VALUE=True
	{printer.configfile.settings['gcode_macro pause'].rename_existing}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5

[delayed_gcode _WAIT_TIMELAPSE_RENDER]
gcode = 
	{% set ri = printer['gcode_macro TIMELAPSE_RENDER'].run_identifier % 4 %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=run_identifier VALUE={ri + 1}
	{% if printer['gcode_macro TIMELAPSE_RENDER'].render %}
	M117 Rendering {['-','\\','|','/'][ri]}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5
	{% else %}
	{action_respond_info("Timelapse: Rendering finished")}
	M117
	{printer.configfile.settings['gcode_macro resume'].rename_existing}
	{% endif %}

[gcode_macro TEST_STREAM_DELAY]
description = Helper macro to find stream and park delay
gcode = 
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set act = printer.toolhead.position %}
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% if act.z > 5.0 %}
	G0 X{min.x + 5.0} F{tl.speed.travel|int * 60}
	G0 X{(max.x-min.x)/2}
	G4 P{tl.park.time|float * 1000}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE=FALSE
	G0 X{max.x - 5.0}
	{% else %}
	{action_raise_error("Toolhead z %.3f to low. Please place head above z = 5.0" % act.z)}
	{% endif %}

[pause_resume]

[gcode_macro START_PRINT]
gcode = 
	{% set T_BED = params.T_BED|default(50) %}
	{% set T_EXTRUDER = params.T_EXTRUDER|default(205) %}
	
	M117 Waiting for Temps
	
	M140 S{T_BED}
	M190 S{T_BED}
	M104 S{T_EXTRUDER|float*0.50}
	
	
	M117 Building Mesh
	G28
	G90
	BED_MESH_CALIBRATE
	BED_MESH_PROFILE LOAD=default
	
	
	G1 X10.0 Y20.0 F5000.0
	M117 Waiting for Temps
	M104 S{T_EXTRUDER}
	M109 S{T_EXTRUDER}
	
	
	PRIME_LINE
	M117 Printing...

[gcode_macro END_PRINT]
gcode = 
	
	G91
	G1 E-0.3 F3000
	G1 E-0.3 Z0.2 F2000
	G1 X5 Y5 F3000; Wipe out
	G1 Z10
	
	G90
	G1 X180 Y340 F2000
	
	M104 S0
	M140 S0
	M107
	
	M84
	SET_SKEW CLEAR=1
	BED_MESH_CLEAR
	M117 Done Printing!
	TIMELAPSE_RENDER

[gcode_macro PRIME_LINE]
gcode = 
	M117 Prime Line
	G92 E0
	
	G1 Z2.0 F3000
	
	
	
	
	
	
	
	G1 X10.1 Y20 Z0.28 F5000.0
	G1 X10.1 Y200 Z0.28 F1500.0 E15
	G1 X10.4 Y200 Z0.28 F5000.0
	G1 X10.4 Y20 Z0.28 F1500.0 E30
	
	G92 E0
	G1 Z2.0 F3000

[gcode_macro G29]
gcode = 
	G28
	BED_MESH_CALIBRATE
	G0 X360 Y360 Z10 F6000
	BED_MESH_PROFILE save=default

[gcode_macro M125]
gcode = 
	SAVE_GCODE_STATE NAME=parking
	M117 Parking toolhead
	G91
	G1 Z10 F600
	G90
	G1 X350 Y350 F4000
	RESTORE_GCODE_STATE NAME=parking

[gcode_macro LOW_TEMP_CHECK|T_EXTRUDER]
gcode = 
	{% set T_EXTRUDER = params.T_EXTRUDER|default(205) %}
	{% if printer.extruder.target != 0 %}
	{% if printer.extruder.temperature < printer.extruder.target %}
	M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
	M109 S{printer.extruder.target|float}
	{% endif %}
	{% else %}
	{% if printer.extruder.target < T_EXTRUDER %}
	M118 No setpoint, heating to {T_EXTRUDER}.
	M109 S{T_EXTRUDER}
	{% endif %}
	{% endif %}

[gcode_macro _M701]
description = Load Filament
gcode = 
	SAVE_GCODE_STATE NAME=loading_filament
	M117 Loading Filament
	M83
	G92 E0.0
	LOW_TEMP_CHECK
	G1 E120 F3000
	G1 E50 F200
	G92 E0.0
	RESTORE_GCODE_STATE NAME=loading_filament

[gcode_macro LOAD_FILAMENT]
variable_load_distance = 50
variable_purge_distance = 25
gcode = 
	{% set speed = params.SPEED|default(300) %}
	{% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
	SAVE_GCODE_STATE NAME=loading_filament
	G91
	G92 E0
	G1 E{load_distance} F{max_velocity}
	G1 E{purge_distance} F{speed}
	RESTORE_GCODE_STATE NAME=loading_filament

[gcode_macro _M702]
description = Unload Filament
gcode = 
	SAVE_GCODE_STATE NAME=unloading_filament
	M125
	M117 Unloading Filament
	LOW_TEMP_CHECK
	G91
	G1 E10 F100
	G92 E0.0
	G1 E-150 F3000
	G92 E0.0
	RESTORE_GCODE_STATE NAME=unloading_filament

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance = 50
variable_purge_distance = 25
gcode = 
	{% set speed = params.SPEED|default(300) %}
	{% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
	SAVE_GCODE_STATE NAME=unloading_filament
	G91
	G92 E0
	G1 E{purge_distance} F{speed}
	G1 E-{unload_distance} F{max_velocity}
	RESTORE_GCODE_STATE NAME=unloading_filament

[gcode_macro M600]
description = Change Filament
gcode = 
	M117 Filament Change
	M118 Filament Change
	SAVE_GCODE_STATE NAME=filament_change
	PAUSE
	LOW_TEMP_CHECK
	G91
	G1 E-1 F300
	M125
	G1 E-350 F4000
	RESTORE_GCODE_STATE NAME=filament_change

[gcode_macro COUNTDOWN]
gcode = 
	{% set MSG = params.MSG|default("Time: ") %}
	{% set TIME = params.TIME|default(10) %}
	
	{% for s in range(TIME|int, 0, -1) %}
	
	G4 P1000
	
	M117 {params.MSG} {s}s
	M118 {params.MSG} {s}s
	{% endfor %}

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set x = params.X|default(5) %}
	{% set y = params.Y|default(225) %}
	{% set z = params.Z|default(10)|float %}
	{% set e = params.E|default(1) %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set lift_z = z|abs %}
	{% if act_z < (max_z - lift_z) %}
	{% set z_safe = lift_z %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	PAUSE_BASE
	G91
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{e} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe}
	G90
	G1 X{x} Y{y} F6000
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
gcode = 
	
	{% set e = params.E|default(1) %}
	
	{% if 'VELOCITY' in params|upper %}
	{% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
	{%else %}
	{% set get_params = "" %}
	{% endif %}
	
	G91
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E{e} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	BASE_CANCEL_PRINT{% for k in params %}{' '~k~'='~params[k]}{% endfor %}

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[menu __main]
type = list
name = Main

[menu __main __pause]
type = command
enable = {(printer.print_stats.state == "printing") and ("pause_resume" in printer)}
index = 0
name = Pause printing
gcode = 
	PAUSE
	{ menu.exit() }

[menu __main __resume]
type = command
enable = {(printer.print_stats.state == "paused") and ("pause_resume" in printer)}
index = 0
name = Resume printing
gcode = 
	RESUME
	{ menu.exit() }

[menu __main __abort]
type = command
enable = {((printer.print_stats.state == "printing" or printer.print_stats.state == "paused")) and ("pause_resume" in printer)}
index = 1
name = Abort printing
gcode = 
	CANCEL_PRINT
	{ menu.exit() }

[menu __main __tune]
type = list
enable = {printer.idle_timeout.state == "Printing"}
name = Tune

[menu __main __tune __speed]
type = input
name = Speed: {'%3d' % (menu.input*100)}%
input = {printer.gcode_move.speed_factor}
input_min = 0.01
input_max = 5
input_step = 0.01
realtime = True
gcode = 
	M220 S{'%d' % (menu.input*100)}

[menu __main __tune __flow]
type = input
name = Flow: {'%3d' % (menu.input*100)}%
input = {printer.gcode_move.extrude_factor}
input_min = 0.01
input_max = 2
input_step = 0.01
realtime = True
gcode = 
	M221 S{'%d' % (menu.input*100)}

[menu __main __tune __offsetz]
type = input
name = Offset Z:{'%05.3f' % menu.input}
input = {printer.gcode_move.homing_origin.z}
input_min = -5
input_max = 5
input_step = 0.005
realtime = True
gcode = 
	SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1

[menu __main __tune __hotend0_target]
type = input
enable = {('extruder' in printer) and ('extruder' in printer.heaters.available_heaters)}
name = {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input = {printer.extruder.target}
input_min = 0
input_max = {printer.configfile.config.extruder.max_temp}
input_step = 1
realtime = True
gcode = 
	M104 T0 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __tune __hotend1_target]
type = input
enable = {('extruder1' in printer) and ('extruder1' in printer.heaters.available_heaters)}
name = {"Ex1:%3.0f (%4.0f)" % (menu.input, printer.extruder1.temperature)}
input = {printer.extruder1.target}
input_min = 0
input_max = {printer.configfile.config.extruder1.max_temp}
input_step = 1
realtime = True
gcode = 
	M104 T1 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __tune __hotbed_target]
type = input
enable = {'heater_bed' in printer}
name = {"Bed:%3.0f (%4.0f)" % (menu.input, printer.heater_bed.temperature)}
input = {printer.heater_bed.target}
input_min = 0
input_max = {printer.configfile.config.heater_bed.max_temp}
input_step = 1
realtime = True
gcode = 
	M140 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __tune __fanspeed]
type = input
enable = {'fan' in printer}
name = Fan speed: {'%3d' % (menu.input*100)}%
input = {printer.fan.speed}
input_min = 0
input_max = 1
input_step = 0.01
realtime = True
gcode = 
	M106 S{'%d' % (menu.input*255)}

[menu __main __octoprint]
type = disabled

[menu __main __octoprint __pause]
type = disabled

[menu __main __octoprint __resume]
type = disabled

[menu __main __octoprint __abort]
type = disabled

[menu __main __sdcard]
type = vsdlist
enable = {not printer.idle_timeout.state == "Printing" and ('virtual_sdcard' in printer)}
name = SD Card

[menu __main __sdcard __start]
type = command
enable = {('virtual_sdcard' in printer) and printer.virtual_sdcard.file_path and not printer.virtual_sdcard.is_active}
name = Start printing
gcode = 
	M24
	{ menu.exit() }

[menu __main __sdcard __resume]
type = disabled

[menu __main __sdcard __pause]
type = disabled

[menu __main __sdcard __cancel]
type = disabled

[menu __main __control]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Control

[menu __main __control __home]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Home All
gcode = G28

[menu __main __control __homez]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Home Z
gcode = G28 Z

[menu __main __control __homexy]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Home X/Y
gcode = G28 X Y

[menu __main __control __disable]
type = command
name = Steppers off
gcode = 
	M84
	M18

[menu __main __control __fanonoff]
type = input
enable = {'fan' in printer}
name = Fan: {'ON ' if menu.input else 'OFF'}
input = {printer.fan.speed}
input_min = 0
input_max = 1
input_step = 1
realtime = True
gcode = 
	M106 S{255 if menu.input else 0}

[menu __main __control __fanspeed]
type = input
enable = {'fan' in printer}
name = Fan speed: {'%3d' % (menu.input*100)}%
input = {printer.fan.speed}
input_min = 0
input_max = 1
input_step = 0.01
realtime = True
gcode = 
	M106 S{'%d' % (menu.input*255)}

[menu __main __control __caselightonoff]
type = input
enable = {'output_pin caselight' in printer}
name = Lights: {'ON ' if menu.input else 'OFF'}
input = {printer['output_pin caselight'].value}
input_min = 0
input_max = 1
input_step = 1
realtime = True
gcode = 
	SET_PIN PIN=caselight VALUE={1 if menu.input else 0}

[menu __main __control __caselightpwm]
type = input
enable = {'output_pin caselight' in printer}
name = Lights: {'%3d' % (menu.input*100)}%
input = {printer['output_pin caselight'].value}
input_min = 0.0
input_max = 1.0
input_step = 0.01
realtime = True
gcode = 
	SET_PIN PIN=caselight VALUE={menu.input}

[menu __main __control __move_10mm]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Move 10mm

[menu __main __control __move_10mm __axis_x]
type = input
name = Move X:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.x}
input_min = {printer.toolhead.axis_minimum.x}
input_max = {printer.toolhead.axis_maximum.x}
input_step = 10.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 X{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_y]
type = input
name = Move Y:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.y}
input_min = {printer.toolhead.axis_minimum.y}
input_max = {printer.toolhead.axis_maximum.y}
input_step = 10.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Y{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_z]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move Z:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.z}
input_min = 0
input_max = {printer.toolhead.axis_maximum.z}
input_step = 10.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Z{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_e]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move E:{'%+06.1f' % menu.input}
input = 0
input_min = -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max = {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step = 10.0
realtime = False
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	M83
	G1 E{menu.input} F240
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Move 1mm

[menu __main __control __move_1mm __axis_x]
type = input
name = Move X:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.x}
input_min = {printer.toolhead.axis_minimum.x}
input_max = {printer.toolhead.axis_maximum.x}
input_step = 1.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 X{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_y]
type = input
name = Move Y:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.y}
input_min = {printer.toolhead.axis_minimum.y}
input_max = {printer.toolhead.axis_maximum.y}
input_step = 1.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Y{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_z]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move Z:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.z}
input_min = 0
input_max = {printer.toolhead.axis_maximum.z}
input_step = 1.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Z{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_e]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move E:{'%+06.1f' % menu.input}
input = 0
input_min = -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max = {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step = 1.0
realtime = False
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	M83
	G1 E{menu.input} F240
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Move 0.1mm

[menu __main __control __move_01mm __axis_x]
type = input
name = Move X:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.x}
input_min = {printer.toolhead.axis_minimum.x}
input_max = {printer.toolhead.axis_maximum.x}
input_step = 0.1
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 X{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_y]
type = input
name = Move Y:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.y}
input_min = {printer.toolhead.axis_minimum.y}
input_max = {printer.toolhead.axis_maximum.y}
input_step = 0.1
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Y{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_z]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move Z:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.z}
input_min = 0
input_max = {printer.toolhead.axis_maximum.z}
input_step = 0.1
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Z{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_e]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move E:{'%+06.1f' % menu.input}
input = 0
input_min = -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max = {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step = 0.1
realtime = False
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	M83
	G1 E{menu.input} F240
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __temp]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Temperature

[menu __main __temp __hotend0_target]
type = input
enable = {('extruder' in printer) and ('extruder' in printer.heaters.available_heaters)}
name = {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input = {printer.extruder.target}
input_min = 0
input_max = {printer.configfile.config.extruder.max_temp}
input_step = 1
gcode = 
	M104 T0 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __temp __hotend1_target]
type = input
enable = {('extruder1' in printer) and ('extruder1' in printer.heaters.available_heaters)}
name = {"Ex1:%3.0f (%4.0f)" % (menu.input, printer.extruder1.temperature)}
input = {printer.extruder1.target}
input_min = 0
input_max = {printer.configfile.config.extruder1.max_temp}
input_step = 1
gcode = 
	M104 T1 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __temp __hotbed_target]
type = input
enable = {'heater_bed' in printer}
name = {"Bed:%3.0f (%4.0f)" % (menu.input, printer.heater_bed.temperature)}
input = {printer.heater_bed.target}
input_min = 0
input_max = {printer.configfile.config.heater_bed.max_temp}
input_step = 1
gcode = 
	M140 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __filament]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Filament

[menu __main __filament __hotend0_target]
type = input
enable = {'extruder' in printer}
name = {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input = {printer.extruder.target}
input_min = 0
input_max = {printer.configfile.config.extruder.max_temp}
input_step = 1
gcode = M104 T0 S{'%.0f' % menu.input}

[menu __main __filament __loadf]
type = command
name = Load Fil. fast
gcode = 
	SAVE_GCODE_STATE NAME=__filament__load
	M83
	G1 E100 F960
	RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __loads]
type = command
name = Load Fil. slow
gcode = 
	SAVE_GCODE_STATE NAME=__filament__load
	M83
	G1 E50 F240
	RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __unloadf]
type = command
name = Unload Fil.fast
gcode = 
	SAVE_GCODE_STATE NAME=__filament__load
	M83
	G1 E-100 F960
	RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __unloads]
type = command
name = Unload Fil.slow
gcode = 
	SAVE_GCODE_STATE NAME=__filament__load
	M83
	G1 E-50 F240
	RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __feed]
type = input
name = Feed: {'%.1f' % menu.input}
input = 5
input_step = 0.1
gcode = 
	SAVE_GCODE_STATE NAME=__filament__load
	M83
	G1 E{'%.1f' % menu.input} F60
	RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __setup]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Setup

[menu __main __setup __save_config]
type = command
name = Save config
gcode = SAVE_CONFIG

[menu __main __setup __restart]
type = list
name = Restart

[menu __main __setup __restart __host_restart]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Restart host
gcode = RESTART

[menu __main __setup __restart __firmware_restart]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Restart FW
gcode = FIRMWARE_RESTART

[menu __main __setup __tuning]
type = list
name = PID tuning

[menu __main __setup __tuning __hotend_pid_tuning]
type = command
enable = {(not printer.idle_timeout.state == "Printing") and ('extruder' in printer)}
name = Tune Hotend PID
gcode = PID_CALIBRATE HEATER=extruder TARGET=210 WRITE_FILE=1

[menu __main __setup __tuning __hotbed_pid_tuning]
type = command
enable = {(not printer.idle_timeout.state == "Printing") and ('heater_bed' in printer)}
name = Tune Hotbed PID
gcode = PID_CALIBRATE HEATER=heater_bed TARGET=60 WRITE_FILE=1

[menu __main __setup __calib]
type = list
name = Calibration

[menu __main __setup __calib __delta_calib_auto]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Delta cal. auto
gcode = 
	G28
	DELTA_CALIBRATE

[menu __main __setup __calib __delta_calib_man]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Delta cal. man

[menu __main __setup __calib __bedprobe]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Bed probe
gcode = PROBE

[menu __main __setup __calib __delta_calib_man __start]
type = command
name = Start probing
gcode = 
	G28
	DELTA_CALIBRATE METHOD=manual

[menu __main __setup __calib __delta_calib_man __move_z]
type = input
name = Move Z: {'%03.2f' % menu.input}
input = {printer.gcode_move.gcode_position.z}
input_step = 1
realtime = True
gcode = 
	{%- if menu.event == 'change' -%}
	G1 Z{'%.2f' % menu.input}
	{%- elif menu.event == 'long_click' -%}
	G1 Z{'%.2f' % menu.input}
	SAVE_GCODE_STATE NAME=__move__axis
	G91
	G1 Z2
	G1 Z-2
	RESTORE_GCODE_STATE NAME=__move__axis
	{%- endif -%}

[menu __main __setup __calib __delta_calib_man __test_z]
type = input
name = Test Z: {['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
input = 6
input_min = 0
input_max = 11
input_step = 1
gcode = 
	{%- if menu.event == 'long_click' -%}
	TESTZ Z={['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
	{%- endif -%}

[menu __main __setup __calib __delta_calib_man __accept]
type = command
name = Accept
gcode = ACCEPT

[menu __main __setup __calib __delta_calib_man __abort]
type = command
name = Abort
gcode = ABORT

[menu __main __setup __dump]
type = command
name = Dump parameters
gcode = 
	{% for name1 in printer %}
	{% for name2 in printer[name1] %}
	{ action_respond_info("printer['%s'].%s = %s"
	% (name1, name2, printer[name1][name2])) }
	{% else %}
	{ action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
	{% endfor %}
	{% endfor %}

[menu __main __temp __preheat_pla]
type = list
name = Set PLA

[menu __main __temp __preheat_pla __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Preheat all
gcode = 
	M140 S60
	M104 S105

[menu __main __temp __preheat_pla __hotend]
type = command
enable = {'extruder' in printer}
name = Preheat hotend
gcode = M104 S105

[menu __main __temp __preheat_pla __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Preheat hotbed
gcode = M140 S60

[menu __main __temp __preheat_abs]
type = list
name = Set PLA+

[menu __main __temp __preheat_abs __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Preheat all
gcode = 
	M140 S60
	M104 S112.5

[menu __main __temp __preheat_abs __hotend]
type = command
enable = {'extruder' in printer}
name = Preheat hotend
gcode = M104 S112.5

[menu __main __temp __preheat_abs __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Preheat hotbed
gcode = M140 S60

[menu __main __temp __cooldown]
type = list
name = Set PETG

[menu __main __temp __cooldown __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Preheat all
gcode = 
	M140 S70
	M104 S120

[menu __main __temp __cooldown __hotend]
type = command
enable = {'extruder' in printer}
name = Preheat hotend
gcode = M104 S120

[menu __main __temp __cooldown __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Preheat hotbed
gcode = M140 S70

[menu __main __temp __preheat_nylon]
type = list
name = Set PC

[menu __main __temp __preheat_nylon __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Preheat all
gcode = 
	M140 S100
	M104 S145

[menu __main __temp __preheat_nylon __hotend]
type = command
enable = {'extruder' in printer}
name = Preheat hotend
gcode = M104 S145

[menu __main __temp __preheat_nylon __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Preheat hotbed
gcode = M140 S100

[menu __main __temp __preheat_tpu]
type = list
name = Set TPU

[menu __main __temp __preheat_tpu __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Preheat all
gcode = 
	M140 S50
	M104 S110

[menu __main __temp __preheat_tpu __hotend]
type = command
enable = {'extruder' in printer}
name = Preheat hotend
gcode = M104 S110

[menu __main __temp __preheat_tpu __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Preheat hotbed
gcode = M140 S50

[menu __main __temp __cd]
type = list
name = Cooldown

[menu __main __temp __cd __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Cooldown all
gcode = 
	M140 S0
	M104 S0

[menu __main __temp __cd __hotend]
type = command
enable = {'extruder' in printer}
name = Cooldown hotend
gcode = M104 S0

[menu __main __temp __cd __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Cooldown hotbed
gcode = M140 S0

[mcu]
serial = /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0

[static_digital_output usb_pullup_enable]
pins = !PA14

[save_variables]
filename = ~/printer_data/config/variables.cfg

[board_pins]
aliases = 
	
	EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8,  EXP1_9=<GND>,
	EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>

[display]
lcd_type = emulated_st7920
en_pin = EXP1_7
spi_software_sclk_pin = EXP1_6
spi_software_mosi_pin = EXP1_8
spi_software_miso_pin = PA3
encoder_pins = ^EXP1_5, ^EXP1_3
click_pin = ^!EXP1_2

[printer]
kinematics = cartesian
max_velocity = 500
max_accel = 1000
minimum_cruise_ratio = 0.5
max_z_velocity = 10
max_z_accel = 100
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 0.2

[skew_correction]

[exclude_object]

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[firmware_retraction]
retract_length = 1
retract_speed = 40
unretract_speed = 25

[extruder]
step_pin = PB3
dir_pin = !PB4
enable_pin = !PD2
microsteps = 16
rotation_distance = 7.602
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PC8
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PA0
min_temp = 10
max_temp = 300
min_extrude_temp = 180
max_extrude_only_distance = 500
pressure_advance_smooth_time = 0.04
control = pid
pid_kp = 32.522
pid_ki = 4.169
pid_kd = 63.417

[tmc2209 extruder]
uart_pin = PC11
tx_pin = PC10
uart_address = 3
run_current = 0.650

[bltouch]
sensor_pin = ^PC2
control_pin = PA1
pin_move_time = 0.675
stow_on_each_sample = False
probe_with_touch_mode = True
pin_up_touch_mode_reports_triggered = False
x_offset = -45
y_offset = -15
speed = 20
lift_speed = 20
samples = 1
sample_retract_dist = 5
samples_tolerance_retries = 3
z_offset = 2.430

[safe_z_home]
home_xy_position = 235, 189
speed = 200
z_hop = 5
z_hop_speed = 20

[heater_bed]
heater_pin = PC9
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC3
min_temp = 5
max_temp = 130
control = pid
pid_kp = 58.901
pid_ki = 0.646
pid_kd = 1342.937

[heater_fan heatbreak_cooling_fan]
pin = PC7
heater = extruder
heater_temp = 50.0

[fan]
pin = PC6

[temperature_sensor raspberry_pi]
sensor_type = temperature_host

[temperature_sensor SKR_Mini_E3_v2]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[filament_switch_sensor e0_sensor]
pause_on_runout = True
runout_gcode = 
	M600
switch_pin = PC15

[gcode_macro _km_options]
variable_load_length = 50.0
variable_start_purge_length = 30
gcode = 

[bed_mesh default]
version = 1
points = 
	-0.458750, -0.263750, -0.215000, -0.356250
	-0.220000, -0.061250, -0.010000, -0.145000
	-0.206250, -0.102500, -0.100000, -0.158750
	-0.480000, -0.346250, -0.347500, -0.361250
x_count = 4
y_count = 4
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 25.0
max_x = 289.99
min_y = 25.0
max_y = 329.98
=======================
Declaration of '__main' hides previous menuitem declaration
Declaration of '__main __tune' hides previous menuitem declaration
Declaration of '__main __tune __speed' hides previous menuitem declaration
Declaration of '__main __tune __flow' hides previous menuitem declaration
Declaration of '__main __tune __offsetz' hides previous menuitem declaration
Declaration of '__main __octoprint' hides previous menuitem declaration
Declaration of '__main __octoprint __pause' hides previous menuitem declaration
Declaration of '__main __octoprint __resume' hides previous menuitem declaration
Declaration of '__main __octoprint __abort' hides previous menuitem declaration
Declaration of '__main __sdcard' hides previous menuitem declaration
Declaration of '__main __sdcard __start' hides previous menuitem declaration
Declaration of '__main __sdcard __resume' hides previous menuitem declaration
Declaration of '__main __sdcard __pause' hides previous menuitem declaration
Declaration of '__main __sdcard __cancel' hides previous menuitem declaration
Declaration of '__main __control' hides previous menuitem declaration
Declaration of '__main __control __home' hides previous menuitem declaration
Declaration of '__main __control __homez' hides previous menuitem declaration
Declaration of '__main __control __homexy' hides previous menuitem declaration
Declaration of '__main __control __disable' hides previous menuitem declaration
Declaration of '__main __control __fanonoff' hides previous menuitem declaration
Declaration of '__main __control __fanspeed' hides previous menuitem declaration
Declaration of '__main __control __caselightonoff' hides previous menuitem declaration
Declaration of '__main __control __caselightpwm' hides previous menuitem declaration
Declaration of '__main __control __move_10mm' hides previous menuitem declaration
Declaration of '__main __control __move_10mm __axis_x' hides previous menuitem declaration
Declaration of '__main __control __move_10mm __axis_y' hides previous menuitem declaration
Declaration of '__main __control __move_10mm __axis_z' hides previous menuitem declaration
Declaration of '__main __control __move_10mm __axis_e' hides previous menuitem declaration
Declaration of '__main __control __move_1mm' hides previous menuitem declaration
Declaration of '__main __control __move_1mm __axis_x' hides previous menuitem declaration
Declaration of '__main __control __move_1mm __axis_y' hides previous menuitem declaration
Declaration of '__main __control __move_1mm __axis_z' hides previous menuitem declaration
Declaration of '__main __control __move_1mm __axis_e' hides previous menuitem declaration
Declaration of '__main __control __move_01mm' hides previous menuitem declaration
Declaration of '__main __control __move_01mm __axis_x' hides previous menuitem declaration
Declaration of '__main __control __move_01mm __axis_y' hides previous menuitem declaration
Declaration of '__main __control __move_01mm __axis_z' hides previous menuitem declaration
Declaration of '__main __control __move_01mm __axis_e' hides previous menuitem declaration
Declaration of '__main __temp' hides previous menuitem declaration
Declaration of '__main __temp __hotend0_target' hides previous menuitem declaration
Declaration of '__main __temp __hotend1_target' hides previous menuitem declaration
Declaration of '__main __temp __hotbed_target' hides previous menuitem declaration
Declaration of '__main __filament' hides previous menuitem declaration
Declaration of '__main __filament __hotend0_target' hides previous menuitem declaration
Declaration of '__main __filament __loadf' hides previous menuitem declaration
Declaration of '__main __filament __loads' hides previous menuitem declaration
Declaration of '__main __filament __unloadf' hides previous menuitem declaration
Declaration of '__main __filament __unloads' hides previous menuitem declaration
Declaration of '__main __filament __feed' hides previous menuitem declaration
Declaration of '__main __setup' hides previous menuitem declaration
Declaration of '__main __setup __save_config' hides previous menuitem declaration
Declaration of '__main __setup __restart' hides previous menuitem declaration
Declaration of '__main __setup __restart __host_restart' hides previous menuitem declaration
Declaration of '__main __setup __restart __firmware_restart' hides previous menuitem declaration
Declaration of '__main __setup __tuning' hides previous menuitem declaration
Declaration of '__main __setup __tuning __hotend_pid_tuning' hides previous menuitem declaration
Declaration of '__main __setup __tuning __hotbed_pid_tuning' hides previous menuitem declaration
Declaration of '__main __setup __calib' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_auto' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man' hides previous menuitem declaration
Declaration of '__main __setup __calib __bedprobe' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man __start' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man __move_z' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man __test_z' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man __accept' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man __abort' hides previous menuitem declaration
Declaration of '__main __setup __dump' hides previous menuitem declaration
Declaration of '__main __temp __preheat_pla' hides previous menuitem declaration
Declaration of '__main __temp __preheat_pla __all' hides previous menuitem declaration
Declaration of '__main __temp __preheat_pla __hotend' hides previous menuitem declaration
Declaration of '__main __temp __preheat_pla __hotbed' hides previous menuitem declaration
Declaration of '__main __temp __preheat_abs' hides previous menuitem declaration
Declaration of '__main __temp __preheat_abs __all' hides previous menuitem declaration
Declaration of '__main __temp __preheat_abs __hotend' hides previous menuitem declaration
Declaration of '__main __temp __preheat_abs __hotbed' hides previous menuitem declaration
Declaration of '__main __temp __cooldown' hides previous menuitem declaration
Declaration of '__main __temp __cooldown __all' hides previous menuitem declaration
Declaration of '__main __temp __cooldown __hotend' hides previous menuitem declaration
Declaration of '__main __temp __cooldown __hotbed' hides previous menuitem declaration
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
webhooks client 3038028656: New connection
webhooks client 3038028656: Client info {'program': 'Moonraker', 'version': 'v0.8.0-379-g346a3d7'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
webhooks client 3038028656: Disconnected
webhooks client 3038400440: New connection
webhooks client 3038400440: Client info {'program': 'Moonraker', 'version': 'v0.8.0-384-g8f3b30a'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 793, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 183, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 131, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 223, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 223, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 798, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
mcu 'mcu': Unable to connect
Once the underlying issue is corrected, use the
"FIRMWARE_RESTART" command to reset the firmware, reload the
config, and restart the host software.
Error configuring printer

Build file /home/pi/klipper/klippy/../.config(3631): Wed May 15 15:17:09 2024
========= Last MCU build config =========
CONFIG_LOW_LEVEL_OPTIONS=y
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
CONFIG_MACH_STM32=y
# CONFIG_MACH_HC32F460 is not set
# CONFIG_MACH_RP2040 is not set
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
# CONFIG_MACH_LINUX is not set
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="stm32"
CONFIG_MCU="stm32f103xe"
CONFIG_CLOCK_FREQ=72000000
CONFIG_USBSERIAL=y
CONFIG_FLASH_SIZE=0x10000
CONFIG_FLASH_BOOT_ADDRESS=0x8000000
CONFIG_RAM_START=0x20000000
CONFIG_RAM_SIZE=0x5000
CONFIG_STACK_SIZE=512
CONFIG_FLASH_APPLICATION_ADDRESS=0x8007000
CONFIG_STM32_SELECT=y
CONFIG_MACH_STM32F103=y
# CONFIG_MACH_STM32F207 is not set
# CONFIG_MACH_STM32F401 is not set
# CONFIG_MACH_STM32F405 is not set
# CONFIG_MACH_STM32F407 is not set
# CONFIG_MACH_STM32F429 is not set
# CONFIG_MACH_STM32F446 is not set
# CONFIG_MACH_STM32F765 is not set
# CONFIG_MACH_STM32F031 is not set
# CONFIG_MACH_STM32F042 is not set
# CONFIG_MACH_STM32F070 is not set
# CONFIG_MACH_STM32F072 is not set
# CONFIG_MACH_STM32G070 is not set
# CONFIG_MACH_STM32G071 is not set
# CONFIG_MACH_STM32G0B0 is not set
# CONFIG_MACH_STM32G0B1 is not set
# CONFIG_MACH_STM32G431 is not set
# CONFIG_MACH_STM32G474 is not set
# CONFIG_MACH_STM32H723 is not set
# CONFIG_MACH_STM32H743 is not set
# CONFIG_MACH_STM32H750 is not set
# CONFIG_MACH_STM32L412 is not set
# CONFIG_MACH_N32G452 is not set
# CONFIG_MACH_N32G455 is not set
# CONFIG_MACH_STM32F103x6 is not set
CONFIG_MACH_STM32F1=y
CONFIG_HAVE_STM32_USBFS=y
CONFIG_HAVE_STM32_CANBUS=y
# CONFIG_STM32F103GD_DISABLE_SWD is not set
CONFIG_STM32_DFU_ROM_ADDRESS=0
# CONFIG_STM32_FLASH_START_2000 is not set
# CONFIG_STM32_FLASH_START_5000 is not set
CONFIG_STM32_FLASH_START_7000=y
# CONFIG_STM32_FLASH_START_8000 is not set
# CONFIG_STM32_FLASH_START_8800 is not set
# CONFIG_STM32_FLASH_START_9000 is not set
# CONFIG_STM32_FLASH_START_10000 is not set
# CONFIG_STM32_FLASH_START_800 is not set
# CONFIG_STM32_FLASH_START_1000 is not set
# CONFIG_STM32_FLASH_START_4000 is not set
# CONFIG_STM32_FLASH_START_0000 is not set
CONFIG_STM32_CLOCK_REF_8M=y
# CONFIG_STM32_CLOCK_REF_12M is not set
# CONFIG_STM32_CLOCK_REF_16M is not set
# CONFIG_STM32_CLOCK_REF_20M is not set
# CONFIG_STM32_CLOCK_REF_24M is not set
# CONFIG_STM32_CLOCK_REF_25M is not set
# CONFIG_STM32_CLOCK_REF_INTERNAL is not set
CONFIG_CLOCK_REF_FREQ=8000000
CONFIG_STM32F0_TRIM=16
CONFIG_STM32_USB_PA11_PA12=y
# CONFIG_STM32_SERIAL_USART1 is not set
# CONFIG_STM32_SERIAL_USART1_ALT_PB7_PB6 is not set
# CONFIG_STM32_SERIAL_USART2 is not set
# CONFIG_STM32_SERIAL_USART2_ALT_PD6_PD5 is not set
# CONFIG_STM32_SERIAL_USART3 is not set
# CONFIG_STM32_SERIAL_USART3_ALT_PD9_PD8 is not set
# CONFIG_STM32_CANBUS_PA11_PA12 is not set
# CONFIG_STM32_CANBUS_PA11_PB9 is not set
# CONFIG_STM32_MMENU_CANBUS_PB8_PB9 is not set
# CONFIG_STM32_MMENU_CANBUS_PD0_PD1 is not set
CONFIG_USB=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER_CHIPID=y
CONFIG_USB_SERIAL_NUMBER="12345"

#
# USB ids
#
# end of USB ids

CONFIG_WANT_GPIO_BITBANGING=y
CONFIG_WANT_DISPLAYS=y
CONFIG_WANT_SENSORS=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_LDC1612=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_INITIAL_PINS="!PA14"
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_STRICT_TIMING=y
CONFIG_HAVE_CHIPID=y
CONFIG_HAVE_STEPPER_BOTH_EDGE=y
CONFIG_HAVE_BOOTLOADER_REQUEST=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(7833): Wed May 15 15:17:27 2024
Last MCU build version: v0.12.0-189-ge0cbd7b5
Last MCU build tools: gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34
Last MCU build config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 INITIAL_PINS=!PA14 MCU=stm32f103xe PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Build file /home/pi/klipper/klippy/../out/klipper.elf(1065836): Wed May 15 15:17:34 2024
Attempting MCU 'mcu' reset
webhooks client 3038400440: Disconnected
Restarting printer
Start printer at Mon Jun 24 12:23:32 2024 (1719246212.3 2134064.8)
===== Config file =====
[bed_mesh]
speed = 200
horizontal_move_z = 5
mesh_min = 25,25
mesh_max = 290,330
probe_count = 4,4
mesh_pps = 2,2
algorithm = bicubic
fade_start = 1
fade_end = 10
fade_target = 0

[bed_screws]
screw1 = 30,45
screw2 = 335,315
screw3 = 30,315
screw4 = 335,45

[screws_tilt_adjust]
screw1 = 81,43
screw1_name = front left screw
screw2 = 350,315
screw2_name = rear right screw
screw3 = 81,315
screw3_name = front right screw
screw4 = 350,45
screw4_name = rear left screw
horizontal_move_z = 5
speed = 50
screw_thread = CW-M4

[stepper_x]
step_pin = PB13
dir_pin = !PB12
enable_pin = !PB14
microsteps = 16
rotation_distance = 40
endstop_pin = ^PC0
position_endstop = 350
position_max = 350
position_min = 0
homing_speed = 100

[tmc2209 stepper_x]
uart_pin = PC11
tx_pin = PC10
uart_address = 0
run_current = 0.680
stealthchop_threshold = 999999

[stepper_y]
step_pin = PB10
dir_pin = !PB2
enable_pin = !PB11
microsteps = 16
rotation_distance = 40
endstop_pin = ^PC1
position_endstop = 350
position_max = 350
position_min = 0
homing_speed = 75

[tmc2209 stepper_y]
uart_pin = PC11
tx_pin = PC10
uart_address = 2
run_current = 0.700
stealthchop_threshold = 999999

[stepper_z]
step_pin = PB0
dir_pin = !PC5
enable_pin = !PB1
microsteps = 16
rotation_distance = 4
endstop_pin = probe:z_virtual_endstop
position_max = 400
position_min = -3
homing_speed = 10

[tmc2209 stepper_z]
uart_pin = PC11
tx_pin = PC10
uart_address = 1
run_current = 0.800
stealthchop_threshold = 999999

[gcode_macro GET_TIMELAPSE_SETUP]
description = Print the Timelapse setup
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set output_txt = ["Timelapse Setup:"] %}
	{% set _dummy = output_txt.append("enable: %s" % tl.enable) %}
	{% set _dummy = output_txt.append("park: %s" % tl.park.enable) %}
	{% if tl.park.enable %}
	{% set _dummy = output_txt.append("park position: %s time: %s s" % (tl.park.pos, tl.park.time)) %}
	{% set _dummy = output_txt.append("park cord x:%s y:%s dz:%s" % (tl.park.coord.x, tl.park.coord.y, tl.park.coord.dz)) %}
	{% set _dummy = output_txt.append("travel speed: %s mm/s" % tl.speed.travel) %}
	{% endif %}
	{% set _dummy = output_txt.append("fw_retract: %s" % tl.extruder.fw_retract) %}
	{% if not tl.extruder.fw_retract %}
	{% set _dummy = output_txt.append("retract: %s mm speed: %s mm/s" % (tl.extruder.retract, tl.speed.retract)) %}
	{% set _dummy = output_txt.append("extrude: %s mm speed: %s mm/s" % (tl.extruder.extrude, tl.speed.extrude)) %}
	{% endif %}
	{% set _dummy = output_txt.append("verbose: %s" % tl.verbose) %}
	{action_respond_info(output_txt|join("\n"))}

[gcode_macro _SET_TIMELAPSE_SETUP]
description = Set user parameters for timelapse
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	{% set park = {'min'   : {'x': (min.x / 1.42)|round(3) if round_bed else min.x|round(3),
	'y': (min.y / 1.42)|round(3) if round_bed else min.y|round(3)},
	'max'   : {'x': (max.x / 1.42)|round(3) if round_bed else max.x|round(3),
	'y': (max.y / 1.42)|round(3) if round_bed else max.y|round(3)},
	'center': {'x': (max.x-(max.x-min.x)/2)|round(3),
	'y': (max.y-(max.y-min.y)/2)|round(3)}} %}
	
	{% if params.ENABLE %}
	{% if params.ENABLE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=enable VALUE={True if params.ENABLE|lower == 'true' else False}
	{% else %}
	{action_raise_error("ENABLE=%s not supported. Allowed values are [True, False]" % params.ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.VERBOSE %}
	{% if params.VERBOSE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=verbose VALUE={True if params.VERBOSE|lower == 'true' else False}
	{% else %}
	{action_raise_error("VERBOSE=%s not supported. Allowed values are [True, False]" % params.VERBOSE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_X %}
	{% if params.CUSTOM_POS_X|float >= min.x and params.CUSTOM_POS_X|float <= max.x %}
	{% set _dummy = tl.park.custom.update({'x':params.CUSTOM_POS_X|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_X=%s must be within [%s - %s]" % (params.CUSTOM_POS_X, min.x, max.x))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_Y %}
	{% if params.CUSTOM_POS_Y|float >= min.y and params.CUSTOM_POS_Y|float <= max.y %}
	{% set _dummy = tl.park.custom.update({'y':params.CUSTOM_POS_Y|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_Y=%s must be within [%s - %s]" % (params.CUSTOM_POS_Y, min.y, max.y))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_DZ %}
	{% if params.CUSTOM_POS_DZ|float >= min.z and params.CUSTOM_POS_DZ|float <= max.z %}
	{% set _dummy = tl.park.custom.update({'dz':params.CUSTOM_POS_DZ|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_DZ=%s must be within [%s - %s]" % (params.CUSTOM_POS_DZ, min.z, max.z))}
	{% endif %}
	{% endif %}
	{% if params.PARK_ENABLE %}
	{% if params.PARK_ENABLE|lower is in ['true', 'false'] %}
	{% set _dummy = tl.park.update({'enable':True if params.PARK_ENABLE|lower == 'true' else False}) %}
	{% else %}
	{action_raise_error("PARK_ENABLE=%s not supported. Allowed values are [True, False]" % params.PARK_ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.PARK_POS %}
	{% if params.PARK_POS|lower is in ['center','front_left','front_right','back_left','back_right','custom','x_only','y_only'] %}
	{% set dic = {'center'      : {'x': park.center.x   , 'y': park.center.y   , 'dz': 1                },
	'front_left'  : {'x': park.min.x      , 'y': park.min.y      , 'dz': 0                },
	'front_right' : {'x': park.max.x      , 'y': park.min.y      , 'dz': 0                },
	'back_left'   : {'x': park.min.x      , 'y': park.max.y      , 'dz': 0                },
	'back_right'  : {'x': park.max.x      , 'y': park.max.y      , 'dz': 0                },
	'custom'      : {'x': tl.park.custom.x, 'y': tl.park.custom.y, 'dz': tl.park.custom.dz},
	'x_only'      : {'x': tl.park.custom.x, 'y': 'none'          , 'dz': tl.park.custom.dz},
	'y_only'      : {'x': 'none'          , 'y': tl.park.custom.y, 'dz': tl.park.custom.dz}} %}
	{% set _dummy = tl.park.update({'pos':params.PARK_POS|lower}) %}
	{% set _dummy = tl.park.update({'coord':dic[tl.park.pos]}) %}
	{% else %}
	{action_raise_error("PARK_POS=%s not supported. Allowed values are [CENTER, FRONT_LEFT, FRONT_RIGHT, BACK_LEFT, BACK_RIGHT, CUSTOM, X_ONLY, Y_ONLY]"
	% params.PARK_POS|upper)}
	{% endif %}
	{% endif %}
	{% if params.PARK_TIME %}
	{% if params.PARK_TIME|float >= 0.0 %}
	{% set _dummy = tl.park.update({'time':params.PARK_TIME|float|round(3)}) %}
	{% else %}
	{action_raise_error("PARK_TIME=%s must be a positive number" % params.PARK_TIME)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=park VALUE="{tl.park}"
	{% if params.TRAVEL_SPEED %}
	{% if params.TRAVEL_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'travel':params.TRAVEL_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("TRAVEL_SPEED=%s must be larger than 0" % params.TRAVEL_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_SPEED %}
	{% if params.RETRACT_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'retract':params.RETRACT_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_SPEED=%s must be larger than 0" % params.RETRACT_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.EXTRUDE_SPEED %}
	{% if params.EXTRUDE_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'extrude':params.EXTRUDE_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_SPEED=%s must be larger than 0" % params.EXTRUDE_SPEED)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=speed VALUE="{tl.speed}"
	{% if params.EXTRUDE_DISTANCE %}
	{% if params.EXTRUDE_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'extrude':params.EXTRUDE_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_DISTANCE=%s must be specified as positiv number" % params.EXTRUDE_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_DISTANCE %}
	{% if params.RETRACT_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'retract':params.RETRACT_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_DISTANCE=%s must be specified as positiv number" % params.RETRACT_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.FW_RETRACT %}
	{% if params.FW_RETRACT|lower is in ['true', 'false'] %}
	{% if 'firmware_retraction' in printer.configfile.settings %}
	{% set _dummy = tl.extruder.update({'fw_retract': True if params.FW_RETRACT|lower == 'true' else False}) %}
	{% else %}
	{% set _dummy = tl.extruder.update({'fw_retract':False}) %}
	{% if params.FW_RETRACT|capitalize == 'True' %}
	{action_raise_error("[firmware_retraction] not defined in printer.cfg. Can not enable fw_retract")}
	{% endif %}
	{% endif %}
	{% else %}
	{action_raise_error("FW_RETRACT=%s not supported. Allowed values are [True, False]" % params.FW_RETRACT|capitalize)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=extruder VALUE="{tl.extruder}"
	{% if printer.configfile.settings['gcode_macro pause'] is defined %}
	{% set _dummy = tl.macro.update({'pause': printer.configfile.settings['gcode_macro pause'].rename_existing}) %}
	{% endif %}
	{% if printer.configfile.settings['gcode_macro resume'] is defined %}
	{% set _dummy = tl.macro.update({'resume': printer.configfile.settings['gcode_macro resume'].rename_existing}) %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=macro VALUE="{tl.macro}"

[gcode_macro TIMELAPSE_TAKE_FRAME]
description = Take Timelapse shoot
variable_enable = False
variable_takingframe = False
variable_park = {'enable': False,
	'pos'   : 'center',
	'time'  : 0.1,
	'custom': {'x': 0, 'y': 0, 'dz': 0},
	'coord' : {'x': 0, 'y': 0, 'dz': 0}}
variable_extruder = {'fw_retract': False,
	'retract': 1.0,
	'extrude': 1.0}
variable_speed = {'travel': 100,
	'retract': 15,
	'extrude': 15}
variable_verbose = True
variable_check_time = 0.5
variable_restore = {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500, 'e':0, 'factor': {'speed': 1.0, 'extrude': 1.0}}
variable_macro = {'pause': 'PAUSE', 'resume': 'RESUME'}
variable_is_paused = False
gcode = 
	{% set hyperlapse = True if params.HYPERLAPSE and params.HYPERLAPSE|lower =='true' else False %}
	{% if enable %}
	{% if (hyperlapse and printer['gcode_macro HYPERLAPSE'].run) or
	(not hyperlapse and not printer['gcode_macro HYPERLAPSE'].run) %}
	{% if park.enable %}
	{% set pos = {'x': 'X' + park.coord.x|string if park.pos != 'y_only' else '',
	'y': 'Y' + park.coord.y|string if park.pos != 'x_only' else '',
	'z': 'Z'+ [printer.gcode_move.gcode_position.z + park.coord.dz, printer.toolhead.axis_maximum.z]|min|string} %}
	{% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
	'extrude'    : printer.gcode_move.absolute_extrude},
	'speed'   : printer.gcode_move.speed,
	'e'       : printer.gcode_move.gcode_position.e,
	'factor'  : {'speed'  : printer.gcode_move.speed_factor,
	'extrude': printer.gcode_move.extrude_factor}} %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=restore VALUE="{restore}"
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, minimum extruder temperature not reached!")}{% endif %}
	{% else %}
	{% if extruder.fw_retract %}
	G10
	{% else %}
	M83
	G0 E-{extruder.retract} F{speed.retract * 60}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=True
	{macro.pause}
	SET_GCODE_OFFSET X=0 Y=0
	G90
	{% if "xyz" not in printer.toolhead.homed_axes %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, axis not homed yet!")}{% endif %}
	{% else %}
	G0 {pos.x} {pos.y} {pos.z} F{speed.travel * 60}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=takingframe VALUE=True
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION={check_time}
	M400
	{% endif %}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE={hyperlapse}
	{% endif %}
	{% else %}
	{% if verbose %}{action_respond_info("Timelapse: disabled, take frame ignored")}{% endif %}
	{% endif %}

[gcode_macro _TIMELAPSE_NEW_FRAME]
description = action call for timelapse shoot. must be a seperate macro
gcode = 
	{action_call_remote_method("timelapse_newframe",
	macropark=printer['gcode_macro TIMELAPSE_TAKE_FRAME'].park,
	hyperlapse=params.HYPERLAPSE)}

[delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME]
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set factor = {'speed': printer.gcode_move.speed_factor, 'extrude': printer.gcode_move.extrude_factor} %}
	{% if tl.takingframe %}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION={tl.check_time}
	{% else %}
	{tl.macro.resume} VELOCITY={tl.speed.travel}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=False
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{action_respond_info("Timelapse: Warning minimum extruder temperature not reached!")}
	{% else %}
	{% if tl.extruder.fw_retract %}
	G11
	{% else %}
	G0 E{tl.extruder.extrude} F{tl.speed.extrude * 60}
	G0 F{tl.restore.speed}
	{% if tl.restore.absolute.extrude %}
	M82
	G92 E{tl.restore.e}
	{% endif %}
	{% endif %}
	{% endif %}
	{% if tl.restore.factor.speed   != factor.speed   %} M220 S{(factor.speed*100)|round(0)}   {% endif %}
	{% if tl.restore.factor.extrude != factor.extrude %} M221 S{(factor.extrude*100)|round(0)} {% endif %}
	{% if not tl.restore.absolute.coordinates %} G91 {% endif %}
	{% endif %}

[gcode_macro HYPERLAPSE]
description = Start/Stop a hyperlapse recording
variable_cycle = 0
variable_run = False
gcode = 
	{% set cycle = params.CYCLE|default(30)|int %}
	{% if params.ACTION and params.ACTION|lower == 'start' %}
	{action_respond_info("Hyperlapse: frames started (Cycle %d sec)" % cycle)}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=True
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={cycle}
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True
	{% elif params.ACTION and params.ACTION|lower == 'stop' %}
	{% if run %}{action_respond_info("Hyperlapse: frames stopped")}{% endif %}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=False
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION=0
	{% else %}
	{action_raise_error("Hyperlapse: No valid input parameter
	Use:
	- HYPERLAPSE ACTION=START [CYCLE=time]
	- HYPERLAPSE ACTION=STOP")}
	{% endif %}

[delayed_gcode _HYPERLAPSE_LOOP]
gcode = 
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={printer["gcode_macro HYPERLAPSE"].cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True

[gcode_macro TIMELAPSE_RENDER]
description = Render Timelapse video and wait for the result
variable_render = False
variable_run_identifier = 0
gcode = 
	{action_respond_info("Timelapse: Rendering started")}
	{action_call_remote_method("timelapse_render", byrendermacro="True")}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=render VALUE=True
	{printer.configfile.settings['gcode_macro pause'].rename_existing}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5

[delayed_gcode _WAIT_TIMELAPSE_RENDER]
gcode = 
	{% set ri = printer['gcode_macro TIMELAPSE_RENDER'].run_identifier % 4 %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=run_identifier VALUE={ri + 1}
	{% if printer['gcode_macro TIMELAPSE_RENDER'].render %}
	M117 Rendering {['-','\\','|','/'][ri]}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5
	{% else %}
	{action_respond_info("Timelapse: Rendering finished")}
	M117
	{printer.configfile.settings['gcode_macro resume'].rename_existing}
	{% endif %}

[gcode_macro TEST_STREAM_DELAY]
description = Helper macro to find stream and park delay
gcode = 
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set act = printer.toolhead.position %}
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% if act.z > 5.0 %}
	G0 X{min.x + 5.0} F{tl.speed.travel|int * 60}
	G0 X{(max.x-min.x)/2}
	G4 P{tl.park.time|float * 1000}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE=FALSE
	G0 X{max.x - 5.0}
	{% else %}
	{action_raise_error("Toolhead z %.3f to low. Please place head above z = 5.0" % act.z)}
	{% endif %}

[pause_resume]

[gcode_macro START_PRINT]
gcode = 
	{% set T_BED = params.T_BED|default(50) %}
	{% set T_EXTRUDER = params.T_EXTRUDER|default(205) %}
	
	M117 Waiting for Temps
	
	M140 S{T_BED}
	M190 S{T_BED}
	M104 S{T_EXTRUDER|float*0.50}
	
	
	M117 Building Mesh
	G28
	G90
	BED_MESH_CALIBRATE
	BED_MESH_PROFILE LOAD=default
	
	
	G1 X10.0 Y20.0 F5000.0
	M117 Waiting for Temps
	M104 S{T_EXTRUDER}
	M109 S{T_EXTRUDER}
	
	
	PRIME_LINE
	M117 Printing...

[gcode_macro END_PRINT]
gcode = 
	
	G91
	G1 E-0.3 F3000
	G1 E-0.3 Z0.2 F2000
	G1 X5 Y5 F3000; Wipe out
	G1 Z10
	
	G90
	G1 X180 Y340 F2000
	
	M104 S0
	M140 S0
	M107
	
	M84
	SET_SKEW CLEAR=1
	BED_MESH_CLEAR
	M117 Done Printing!
	TIMELAPSE_RENDER

[gcode_macro PRIME_LINE]
gcode = 
	M117 Prime Line
	G92 E0
	
	G1 Z2.0 F3000
	
	
	
	
	
	
	
	G1 X10.1 Y20 Z0.28 F5000.0
	G1 X10.1 Y200 Z0.28 F1500.0 E15
	G1 X10.4 Y200 Z0.28 F5000.0
	G1 X10.4 Y20 Z0.28 F1500.0 E30
	
	G92 E0
	G1 Z2.0 F3000

[gcode_macro G29]
gcode = 
	G28
	BED_MESH_CALIBRATE
	G0 X360 Y360 Z10 F6000
	BED_MESH_PROFILE save=default

[gcode_macro M125]
gcode = 
	SAVE_GCODE_STATE NAME=parking
	M117 Parking toolhead
	G91
	G1 Z10 F600
	G90
	G1 X350 Y350 F4000
	RESTORE_GCODE_STATE NAME=parking

[gcode_macro LOW_TEMP_CHECK|T_EXTRUDER]
gcode = 
	{% set T_EXTRUDER = params.T_EXTRUDER|default(205) %}
	{% if printer.extruder.target != 0 %}
	{% if printer.extruder.temperature < printer.extruder.target %}
	M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
	M109 S{printer.extruder.target|float}
	{% endif %}
	{% else %}
	{% if printer.extruder.target < T_EXTRUDER %}
	M118 No setpoint, heating to {T_EXTRUDER}.
	M109 S{T_EXTRUDER}
	{% endif %}
	{% endif %}

[gcode_macro _M701]
description = Load Filament
gcode = 
	SAVE_GCODE_STATE NAME=loading_filament
	M117 Loading Filament
	M83
	G92 E0.0
	LOW_TEMP_CHECK
	G1 E120 F3000
	G1 E50 F200
	G92 E0.0
	RESTORE_GCODE_STATE NAME=loading_filament

[gcode_macro LOAD_FILAMENT]
variable_load_distance = 50
variable_purge_distance = 25
gcode = 
	{% set speed = params.SPEED|default(300) %}
	{% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
	SAVE_GCODE_STATE NAME=loading_filament
	G91
	G92 E0
	G1 E{load_distance} F{max_velocity}
	G1 E{purge_distance} F{speed}
	RESTORE_GCODE_STATE NAME=loading_filament

[gcode_macro _M702]
description = Unload Filament
gcode = 
	SAVE_GCODE_STATE NAME=unloading_filament
	M125
	M117 Unloading Filament
	LOW_TEMP_CHECK
	G91
	G1 E10 F100
	G92 E0.0
	G1 E-150 F3000
	G92 E0.0
	RESTORE_GCODE_STATE NAME=unloading_filament

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance = 50
variable_purge_distance = 25
gcode = 
	{% set speed = params.SPEED|default(300) %}
	{% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
	SAVE_GCODE_STATE NAME=unloading_filament
	G91
	G92 E0
	G1 E{purge_distance} F{speed}
	G1 E-{unload_distance} F{max_velocity}
	RESTORE_GCODE_STATE NAME=unloading_filament

[gcode_macro M600]
description = Change Filament
gcode = 
	M117 Filament Change
	M118 Filament Change
	SAVE_GCODE_STATE NAME=filament_change
	PAUSE
	LOW_TEMP_CHECK
	G91
	G1 E-1 F300
	M125
	G1 E-350 F4000
	RESTORE_GCODE_STATE NAME=filament_change

[gcode_macro COUNTDOWN]
gcode = 
	{% set MSG = params.MSG|default("Time: ") %}
	{% set TIME = params.TIME|default(10) %}
	
	{% for s in range(TIME|int, 0, -1) %}
	
	G4 P1000
	
	M117 {params.MSG} {s}s
	M118 {params.MSG} {s}s
	{% endfor %}

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set x = params.X|default(5) %}
	{% set y = params.Y|default(225) %}
	{% set z = params.Z|default(10)|float %}
	{% set e = params.E|default(1) %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set lift_z = z|abs %}
	{% if act_z < (max_z - lift_z) %}
	{% set z_safe = lift_z %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	PAUSE_BASE
	G91
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{e} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe}
	G90
	G1 X{x} Y{y} F6000
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
gcode = 
	
	{% set e = params.E|default(1) %}
	
	{% if 'VELOCITY' in params|upper %}
	{% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
	{%else %}
	{% set get_params = "" %}
	{% endif %}
	
	G91
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E{e} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	BASE_CANCEL_PRINT{% for k in params %}{' '~k~'='~params[k]}{% endfor %}

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[menu __main]
type = list
name = Main

[menu __main __pause]
type = command
enable = {(printer.print_stats.state == "printing") and ("pause_resume" in printer)}
index = 0
name = Pause printing
gcode = 
	PAUSE
	{ menu.exit() }

[menu __main __resume]
type = command
enable = {(printer.print_stats.state == "paused") and ("pause_resume" in printer)}
index = 0
name = Resume printing
gcode = 
	RESUME
	{ menu.exit() }

[menu __main __abort]
type = command
enable = {((printer.print_stats.state == "printing" or printer.print_stats.state == "paused")) and ("pause_resume" in printer)}
index = 1
name = Abort printing
gcode = 
	CANCEL_PRINT
	{ menu.exit() }

[menu __main __tune]
type = list
enable = {printer.idle_timeout.state == "Printing"}
name = Tune

[menu __main __tune __speed]
type = input
name = Speed: {'%3d' % (menu.input*100)}%
input = {printer.gcode_move.speed_factor}
input_min = 0.01
input_max = 5
input_step = 0.01
realtime = True
gcode = 
	M220 S{'%d' % (menu.input*100)}

[menu __main __tune __flow]
type = input
name = Flow: {'%3d' % (menu.input*100)}%
input = {printer.gcode_move.extrude_factor}
input_min = 0.01
input_max = 2
input_step = 0.01
realtime = True
gcode = 
	M221 S{'%d' % (menu.input*100)}

[menu __main __tune __offsetz]
type = input
name = Offset Z:{'%05.3f' % menu.input}
input = {printer.gcode_move.homing_origin.z}
input_min = -5
input_max = 5
input_step = 0.005
realtime = True
gcode = 
	SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1

[menu __main __tune __hotend0_target]
type = input
enable = {('extruder' in printer) and ('extruder' in printer.heaters.available_heaters)}
name = {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input = {printer.extruder.target}
input_min = 0
input_max = {printer.configfile.config.extruder.max_temp}
input_step = 1
realtime = True
gcode = 
	M104 T0 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __tune __hotend1_target]
type = input
enable = {('extruder1' in printer) and ('extruder1' in printer.heaters.available_heaters)}
name = {"Ex1:%3.0f (%4.0f)" % (menu.input, printer.extruder1.temperature)}
input = {printer.extruder1.target}
input_min = 0
input_max = {printer.configfile.config.extruder1.max_temp}
input_step = 1
realtime = True
gcode = 
	M104 T1 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __tune __hotbed_target]
type = input
enable = {'heater_bed' in printer}
name = {"Bed:%3.0f (%4.0f)" % (menu.input, printer.heater_bed.temperature)}
input = {printer.heater_bed.target}
input_min = 0
input_max = {printer.configfile.config.heater_bed.max_temp}
input_step = 1
realtime = True
gcode = 
	M140 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __tune __fanspeed]
type = input
enable = {'fan' in printer}
name = Fan speed: {'%3d' % (menu.input*100)}%
input = {printer.fan.speed}
input_min = 0
input_max = 1
input_step = 0.01
realtime = True
gcode = 
	M106 S{'%d' % (menu.input*255)}

[menu __main __octoprint]
type = disabled

[menu __main __octoprint __pause]
type = disabled

[menu __main __octoprint __resume]
type = disabled

[menu __main __octoprint __abort]
type = disabled

[menu __main __sdcard]
type = vsdlist
enable = {not printer.idle_timeout.state == "Printing" and ('virtual_sdcard' in printer)}
name = SD Card

[menu __main __sdcard __start]
type = command
enable = {('virtual_sdcard' in printer) and printer.virtual_sdcard.file_path and not printer.virtual_sdcard.is_active}
name = Start printing
gcode = 
	M24
	{ menu.exit() }

[menu __main __sdcard __resume]
type = disabled

[menu __main __sdcard __pause]
type = disabled

[menu __main __sdcard __cancel]
type = disabled

[menu __main __control]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Control

[menu __main __control __home]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Home All
gcode = G28

[menu __main __control __homez]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Home Z
gcode = G28 Z

[menu __main __control __homexy]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Home X/Y
gcode = G28 X Y

[menu __main __control __disable]
type = command
name = Steppers off
gcode = 
	M84
	M18

[menu __main __control __fanonoff]
type = input
enable = {'fan' in printer}
name = Fan: {'ON ' if menu.input else 'OFF'}
input = {printer.fan.speed}
input_min = 0
input_max = 1
input_step = 1
realtime = True
gcode = 
	M106 S{255 if menu.input else 0}

[menu __main __control __fanspeed]
type = input
enable = {'fan' in printer}
name = Fan speed: {'%3d' % (menu.input*100)}%
input = {printer.fan.speed}
input_min = 0
input_max = 1
input_step = 0.01
realtime = True
gcode = 
	M106 S{'%d' % (menu.input*255)}

[menu __main __control __caselightonoff]
type = input
enable = {'output_pin caselight' in printer}
name = Lights: {'ON ' if menu.input else 'OFF'}
input = {printer['output_pin caselight'].value}
input_min = 0
input_max = 1
input_step = 1
realtime = True
gcode = 
	SET_PIN PIN=caselight VALUE={1 if menu.input else 0}

[menu __main __control __caselightpwm]
type = input
enable = {'output_pin caselight' in printer}
name = Lights: {'%3d' % (menu.input*100)}%
input = {printer['output_pin caselight'].value}
input_min = 0.0
input_max = 1.0
input_step = 0.01
realtime = True
gcode = 
	SET_PIN PIN=caselight VALUE={menu.input}

[menu __main __control __move_10mm]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Move 10mm

[menu __main __control __move_10mm __axis_x]
type = input
name = Move X:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.x}
input_min = {printer.toolhead.axis_minimum.x}
input_max = {printer.toolhead.axis_maximum.x}
input_step = 10.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 X{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_y]
type = input
name = Move Y:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.y}
input_min = {printer.toolhead.axis_minimum.y}
input_max = {printer.toolhead.axis_maximum.y}
input_step = 10.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Y{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_z]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move Z:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.z}
input_min = 0
input_max = {printer.toolhead.axis_maximum.z}
input_step = 10.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Z{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_e]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move E:{'%+06.1f' % menu.input}
input = 0
input_min = -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max = {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step = 10.0
realtime = False
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	M83
	G1 E{menu.input} F240
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Move 1mm

[menu __main __control __move_1mm __axis_x]
type = input
name = Move X:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.x}
input_min = {printer.toolhead.axis_minimum.x}
input_max = {printer.toolhead.axis_maximum.x}
input_step = 1.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 X{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_y]
type = input
name = Move Y:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.y}
input_min = {printer.toolhead.axis_minimum.y}
input_max = {printer.toolhead.axis_maximum.y}
input_step = 1.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Y{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_z]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move Z:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.z}
input_min = 0
input_max = {printer.toolhead.axis_maximum.z}
input_step = 1.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Z{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_e]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move E:{'%+06.1f' % menu.input}
input = 0
input_min = -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max = {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step = 1.0
realtime = False
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	M83
	G1 E{menu.input} F240
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Move 0.1mm

[menu __main __control __move_01mm __axis_x]
type = input
name = Move X:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.x}
input_min = {printer.toolhead.axis_minimum.x}
input_max = {printer.toolhead.axis_maximum.x}
input_step = 0.1
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 X{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_y]
type = input
name = Move Y:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.y}
input_min = {printer.toolhead.axis_minimum.y}
input_max = {printer.toolhead.axis_maximum.y}
input_step = 0.1
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Y{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_z]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move Z:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.z}
input_min = 0
input_max = {printer.toolhead.axis_maximum.z}
input_step = 0.1
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Z{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_e]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move E:{'%+06.1f' % menu.input}
input = 0
input_min = -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max = {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step = 0.1
realtime = False
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	M83
	G1 E{menu.input} F240
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __temp]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Temperature

[menu __main __temp __hotend0_target]
type = input
enable = {('extruder' in printer) and ('extruder' in printer.heaters.available_heaters)}
name = {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input = {printer.extruder.target}
input_min = 0
input_max = {printer.configfile.config.extruder.max_temp}
input_step = 1
gcode = 
	M104 T0 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __temp __hotend1_target]
type = input
enable = {('extruder1' in printer) and ('extruder1' in printer.heaters.available_heaters)}
name = {"Ex1:%3.0f (%4.0f)" % (menu.input, printer.extruder1.temperature)}
input = {printer.extruder1.target}
input_min = 0
input_max = {printer.configfile.config.extruder1.max_temp}
input_step = 1
gcode = 
	M104 T1 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __temp __hotbed_target]
type = input
enable = {'heater_bed' in printer}
name = {"Bed:%3.0f (%4.0f)" % (menu.input, printer.heater_bed.temperature)}
input = {printer.heater_bed.target}
input_min = 0
input_max = {printer.configfile.config.heater_bed.max_temp}
input_step = 1
gcode = 
	M140 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __filament]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Filament

[menu __main __filament __hotend0_target]
type = input
enable = {'extruder' in printer}
name = {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input = {printer.extruder.target}
input_min = 0
input_max = {printer.configfile.config.extruder.max_temp}
input_step = 1
gcode = M104 T0 S{'%.0f' % menu.input}

[menu __main __filament __loadf]
type = command
name = Load Fil. fast
gcode = 
	SAVE_GCODE_STATE NAME=__filament__load
	M83
	G1 E100 F960
	RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __loads]
type = command
name = Load Fil. slow
gcode = 
	SAVE_GCODE_STATE NAME=__filament__load
	M83
	G1 E50 F240
	RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __unloadf]
type = command
name = Unload Fil.fast
gcode = 
	SAVE_GCODE_STATE NAME=__filament__load
	M83
	G1 E-100 F960
	RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __unloads]
type = command
name = Unload Fil.slow
gcode = 
	SAVE_GCODE_STATE NAME=__filament__load
	M83
	G1 E-50 F240
	RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __feed]
type = input
name = Feed: {'%.1f' % menu.input}
input = 5
input_step = 0.1
gcode = 
	SAVE_GCODE_STATE NAME=__filament__load
	M83
	G1 E{'%.1f' % menu.input} F60
	RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __setup]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Setup

[menu __main __setup __save_config]
type = command
name = Save config
gcode = SAVE_CONFIG

[menu __main __setup __restart]
type = list
name = Restart

[menu __main __setup __restart __host_restart]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Restart host
gcode = RESTART

[menu __main __setup __restart __firmware_restart]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Restart FW
gcode = FIRMWARE_RESTART

[menu __main __setup __tuning]
type = list
name = PID tuning

[menu __main __setup __tuning __hotend_pid_tuning]
type = command
enable = {(not printer.idle_timeout.state == "Printing") and ('extruder' in printer)}
name = Tune Hotend PID
gcode = PID_CALIBRATE HEATER=extruder TARGET=210 WRITE_FILE=1

[menu __main __setup __tuning __hotbed_pid_tuning]
type = command
enable = {(not printer.idle_timeout.state == "Printing") and ('heater_bed' in printer)}
name = Tune Hotbed PID
gcode = PID_CALIBRATE HEATER=heater_bed TARGET=60 WRITE_FILE=1

[menu __main __setup __calib]
type = list
name = Calibration

[menu __main __setup __calib __delta_calib_auto]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Delta cal. auto
gcode = 
	G28
	DELTA_CALIBRATE

[menu __main __setup __calib __delta_calib_man]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Delta cal. man

[menu __main __setup __calib __bedprobe]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Bed probe
gcode = PROBE

[menu __main __setup __calib __delta_calib_man __start]
type = command
name = Start probing
gcode = 
	G28
	DELTA_CALIBRATE METHOD=manual

[menu __main __setup __calib __delta_calib_man __move_z]
type = input
name = Move Z: {'%03.2f' % menu.input}
input = {printer.gcode_move.gcode_position.z}
input_step = 1
realtime = True
gcode = 
	{%- if menu.event == 'change' -%}
	G1 Z{'%.2f' % menu.input}
	{%- elif menu.event == 'long_click' -%}
	G1 Z{'%.2f' % menu.input}
	SAVE_GCODE_STATE NAME=__move__axis
	G91
	G1 Z2
	G1 Z-2
	RESTORE_GCODE_STATE NAME=__move__axis
	{%- endif -%}

[menu __main __setup __calib __delta_calib_man __test_z]
type = input
name = Test Z: {['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
input = 6
input_min = 0
input_max = 11
input_step = 1
gcode = 
	{%- if menu.event == 'long_click' -%}
	TESTZ Z={['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
	{%- endif -%}

[menu __main __setup __calib __delta_calib_man __accept]
type = command
name = Accept
gcode = ACCEPT

[menu __main __setup __calib __delta_calib_man __abort]
type = command
name = Abort
gcode = ABORT

[menu __main __setup __dump]
type = command
name = Dump parameters
gcode = 
	{% for name1 in printer %}
	{% for name2 in printer[name1] %}
	{ action_respond_info("printer['%s'].%s = %s"
	% (name1, name2, printer[name1][name2])) }
	{% else %}
	{ action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
	{% endfor %}
	{% endfor %}

[menu __main __temp __preheat_pla]
type = list
name = Set PLA

[menu __main __temp __preheat_pla __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Preheat all
gcode = 
	M140 S60
	M104 S105

[menu __main __temp __preheat_pla __hotend]
type = command
enable = {'extruder' in printer}
name = Preheat hotend
gcode = M104 S105

[menu __main __temp __preheat_pla __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Preheat hotbed
gcode = M140 S60

[menu __main __temp __preheat_abs]
type = list
name = Set PLA+

[menu __main __temp __preheat_abs __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Preheat all
gcode = 
	M140 S60
	M104 S112.5

[menu __main __temp __preheat_abs __hotend]
type = command
enable = {'extruder' in printer}
name = Preheat hotend
gcode = M104 S112.5

[menu __main __temp __preheat_abs __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Preheat hotbed
gcode = M140 S60

[menu __main __temp __cooldown]
type = list
name = Set PETG

[menu __main __temp __cooldown __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Preheat all
gcode = 
	M140 S70
	M104 S120

[menu __main __temp __cooldown __hotend]
type = command
enable = {'extruder' in printer}
name = Preheat hotend
gcode = M104 S120

[menu __main __temp __cooldown __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Preheat hotbed
gcode = M140 S70

[menu __main __temp __preheat_nylon]
type = list
name = Set PC

[menu __main __temp __preheat_nylon __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Preheat all
gcode = 
	M140 S100
	M104 S145

[menu __main __temp __preheat_nylon __hotend]
type = command
enable = {'extruder' in printer}
name = Preheat hotend
gcode = M104 S145

[menu __main __temp __preheat_nylon __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Preheat hotbed
gcode = M140 S100

[menu __main __temp __preheat_tpu]
type = list
name = Set TPU

[menu __main __temp __preheat_tpu __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Preheat all
gcode = 
	M140 S50
	M104 S110

[menu __main __temp __preheat_tpu __hotend]
type = command
enable = {'extruder' in printer}
name = Preheat hotend
gcode = M104 S110

[menu __main __temp __preheat_tpu __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Preheat hotbed
gcode = M140 S50

[menu __main __temp __cd]
type = list
name = Cooldown

[menu __main __temp __cd __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Cooldown all
gcode = 
	M140 S0
	M104 S0

[menu __main __temp __cd __hotend]
type = command
enable = {'extruder' in printer}
name = Cooldown hotend
gcode = M104 S0

[menu __main __temp __cd __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Cooldown hotbed
gcode = M140 S0

[mcu]
serial = /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0

[static_digital_output usb_pullup_enable]
pins = !PA14

[save_variables]
filename = ~/printer_data/config/variables.cfg

[board_pins]
aliases = 
	
	EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8,  EXP1_9=<GND>,
	EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>

[display]
lcd_type = emulated_st7920
en_pin = EXP1_7
spi_software_sclk_pin = EXP1_6
spi_software_mosi_pin = EXP1_8
spi_software_miso_pin = PA3
encoder_pins = ^EXP1_5, ^EXP1_3
click_pin = ^!EXP1_2

[printer]
kinematics = cartesian
max_velocity = 500
max_accel = 1000
minimum_cruise_ratio = 0.5
max_z_velocity = 10
max_z_accel = 100
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 0.2

[skew_correction]

[exclude_object]

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[firmware_retraction]
retract_length = 1
retract_speed = 40
unretract_speed = 25

[extruder]
step_pin = PB3
dir_pin = !PB4
enable_pin = !PD2
microsteps = 16
rotation_distance = 7.602
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PC8
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PA0
min_temp = 10
max_temp = 300
min_extrude_temp = 180
max_extrude_only_distance = 500
pressure_advance_smooth_time = 0.04
control = pid
pid_kp = 32.522
pid_ki = 4.169
pid_kd = 63.417

[tmc2209 extruder]
uart_pin = PC11
tx_pin = PC10
uart_address = 3
run_current = 0.650

[bltouch]
sensor_pin = ^PC2
control_pin = PA1
pin_move_time = 0.675
stow_on_each_sample = False
probe_with_touch_mode = True
pin_up_touch_mode_reports_triggered = False
x_offset = -45
y_offset = -15
speed = 20
lift_speed = 20
samples = 1
sample_retract_dist = 5
samples_tolerance_retries = 3
z_offset = 2.430

[safe_z_home]
home_xy_position = 235, 189
speed = 200
z_hop = 5
z_hop_speed = 20

[heater_bed]
heater_pin = PC9
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC3
min_temp = 5
max_temp = 130
control = pid
pid_kp = 58.901
pid_ki = 0.646
pid_kd = 1342.937

[heater_fan heatbreak_cooling_fan]
pin = PC7
heater = extruder
heater_temp = 50.0

[fan]
pin = PC6

[temperature_sensor raspberry_pi]
sensor_type = temperature_host

[temperature_sensor SKR_Mini_E3_v2]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[filament_switch_sensor e0_sensor]
pause_on_runout = True
runout_gcode = 
	M600
switch_pin = PC15

[gcode_macro _km_options]
variable_load_length = 50.0
variable_start_purge_length = 30
gcode = 

[bed_mesh default]
version = 1
points = 
	-0.458750, -0.263750, -0.215000, -0.356250
	-0.220000, -0.061250, -0.010000, -0.145000
	-0.206250, -0.102500, -0.100000, -0.158750
	-0.480000, -0.346250, -0.347500, -0.361250
x_count = 4
y_count = 4
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 25.0
max_x = 289.99
min_y = 25.0
max_y = 329.98
=======================
Declaration of '__main' hides previous menuitem declaration
Declaration of '__main __tune' hides previous menuitem declaration
Declaration of '__main __tune __speed' hides previous menuitem declaration
Declaration of '__main __tune __flow' hides previous menuitem declaration
Declaration of '__main __tune __offsetz' hides previous menuitem declaration
Declaration of '__main __octoprint' hides previous menuitem declaration
Declaration of '__main __octoprint __pause' hides previous menuitem declaration
Declaration of '__main __octoprint __resume' hides previous menuitem declaration
Declaration of '__main __octoprint __abort' hides previous menuitem declaration
Declaration of '__main __sdcard' hides previous menuitem declaration
Declaration of '__main __sdcard __start' hides previous menuitem declaration
Declaration of '__main __sdcard __resume' hides previous menuitem declaration
Declaration of '__main __sdcard __pause' hides previous menuitem declaration
Declaration of '__main __sdcard __cancel' hides previous menuitem declaration
Declaration of '__main __control' hides previous menuitem declaration
Declaration of '__main __control __home' hides previous menuitem declaration
Declaration of '__main __control __homez' hides previous menuitem declaration
Declaration of '__main __control __homexy' hides previous menuitem declaration
Declaration of '__main __control __disable' hides previous menuitem declaration
Declaration of '__main __control __fanonoff' hides previous menuitem declaration
Declaration of '__main __control __fanspeed' hides previous menuitem declaration
Declaration of '__main __control __caselightonoff' hides previous menuitem declaration
Declaration of '__main __control __caselightpwm' hides previous menuitem declaration
Declaration of '__main __control __move_10mm' hides previous menuitem declaration
Declaration of '__main __control __move_10mm __axis_x' hides previous menuitem declaration
Declaration of '__main __control __move_10mm __axis_y' hides previous menuitem declaration
Declaration of '__main __control __move_10mm __axis_z' hides previous menuitem declaration
Declaration of '__main __control __move_10mm __axis_e' hides previous menuitem declaration
Declaration of '__main __control __move_1mm' hides previous menuitem declaration
Declaration of '__main __control __move_1mm __axis_x' hides previous menuitem declaration
Declaration of '__main __control __move_1mm __axis_y' hides previous menuitem declaration
Declaration of '__main __control __move_1mm __axis_z' hides previous menuitem declaration
Declaration of '__main __control __move_1mm __axis_e' hides previous menuitem declaration
Declaration of '__main __control __move_01mm' hides previous menuitem declaration
Declaration of '__main __control __move_01mm __axis_x' hides previous menuitem declaration
Declaration of '__main __control __move_01mm __axis_y' hides previous menuitem declaration
Declaration of '__main __control __move_01mm __axis_z' hides previous menuitem declaration
Declaration of '__main __control __move_01mm __axis_e' hides previous menuitem declaration
Declaration of '__main __temp' hides previous menuitem declaration
Declaration of '__main __temp __hotend0_target' hides previous menuitem declaration
Declaration of '__main __temp __hotend1_target' hides previous menuitem declaration
Declaration of '__main __temp __hotbed_target' hides previous menuitem declaration
Declaration of '__main __filament' hides previous menuitem declaration
Declaration of '__main __filament __hotend0_target' hides previous menuitem declaration
Declaration of '__main __filament __loadf' hides previous menuitem declaration
Declaration of '__main __filament __loads' hides previous menuitem declaration
Declaration of '__main __filament __unloadf' hides previous menuitem declaration
Declaration of '__main __filament __unloads' hides previous menuitem declaration
Declaration of '__main __filament __feed' hides previous menuitem declaration
Declaration of '__main __setup' hides previous menuitem declaration
Declaration of '__main __setup __save_config' hides previous menuitem declaration
Declaration of '__main __setup __restart' hides previous menuitem declaration
Declaration of '__main __setup __restart __host_restart' hides previous menuitem declaration
Declaration of '__main __setup __restart __firmware_restart' hides previous menuitem declaration
Declaration of '__main __setup __tuning' hides previous menuitem declaration
Declaration of '__main __setup __tuning __hotend_pid_tuning' hides previous menuitem declaration
Declaration of '__main __setup __tuning __hotbed_pid_tuning' hides previous menuitem declaration
Declaration of '__main __setup __calib' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_auto' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man' hides previous menuitem declaration
Declaration of '__main __setup __calib __bedprobe' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man __start' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man __move_z' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man __test_z' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man __accept' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man __abort' hides previous menuitem declaration
Declaration of '__main __setup __dump' hides previous menuitem declaration
Declaration of '__main __temp __preheat_pla' hides previous menuitem declaration
Declaration of '__main __temp __preheat_pla __all' hides previous menuitem declaration
Declaration of '__main __temp __preheat_pla __hotend' hides previous menuitem declaration
Declaration of '__main __temp __preheat_pla __hotbed' hides previous menuitem declaration
Declaration of '__main __temp __preheat_abs' hides previous menuitem declaration
Declaration of '__main __temp __preheat_abs __all' hides previous menuitem declaration
Declaration of '__main __temp __preheat_abs __hotend' hides previous menuitem declaration
Declaration of '__main __temp __preheat_abs __hotbed' hides previous menuitem declaration
Declaration of '__main __temp __cooldown' hides previous menuitem declaration
Declaration of '__main __temp __cooldown __all' hides previous menuitem declaration
Declaration of '__main __temp __cooldown __hotend' hides previous menuitem declaration
Declaration of '__main __temp __cooldown __hotbed' hides previous menuitem declaration
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
webhooks client 3039052920: New connection
webhooks client 3039052920: Client info {'program': 'Moonraker', 'version': 'v0.8.0-384-g8f3b30a'}
Loaded MCU 'mcu' 112 commands (v0.12.0-179-g434770ea / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 INITIAL_PINS=!PA14 MCU=stm32f103xe PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu_temperature 'mcu' nominal base=357.558140 slope=-767.441860
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (70.0, 40.0)    | (25.0, 25.0)
  1   | (158.3, 40.0)   | (113.3, 25.0)
  2   | (246.7, 40.0)   | (201.7, 25.0)
  3   | (335.0, 40.0)   | (290.0, 25.0)
  4   | (335.0, 141.7)  | (290.0, 126.7)
  5   | (246.7, 141.7)  | (201.7, 126.7)
  6   | (158.3, 141.7)  | (113.3, 126.7)
  7   | (70.0, 141.7)   | (25.0, 126.7)
  8   | (70.0, 243.3)   | (25.0, 228.3)
  9   | (158.3, 243.3)  | (113.3, 228.3)
  10  | (246.7, 243.3)  | (201.7, 228.3)
  11  | (335.0, 243.3)  | (290.0, 228.3)
  12  | (335.0, 345.0)  | (290.0, 330.0)
  13  | (246.7, 345.0)  | (201.7, 330.0)
  14  | (158.3, 345.0)  | (113.3, 330.0)
  15  | (70.0, 345.0)   | (25.0, 330.0)
Starting heater checks for heater_bed
Starting heater checks for extruder
Stats 2134068.4: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=2878 bytes_read=6297 bytes_retransmit=9 bytes_invalid=0 send_seq=249 receive_seq=249 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=4603 freq=71996895  heater_bed: target=0 temp=22.6 pwm=0.000 raspberry_pi: temp=32.6 SKR_Mini_E3_v2: temp=28.1 sysload=0.11 cputime=49.241 memavail=7513556 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=22.7 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 3039052920
webhooks: registering remote method 'reboot_machine' for connection id: 3039052920
webhooks: registering remote method 'pause_job_queue' for connection id: 3039052920
webhooks: registering remote method 'start_job_queue' for connection id: 3039052920
webhooks: registering remote method 'timelapse_newframe' for connection id: 3039052920
webhooks: registering remote method 'timelapse_saveFrames' for connection id: 3039052920
webhooks: registering remote method 'timelapse_render' for connection id: 3039052920
Stats 2134069.4: gcodein=0  mcu: mcu_awake=0.017 mcu_task_avg=0.000017 mcu_task_stddev=0.000022 bytes_write=8012 bytes_read=6988 bytes_retransmit=9 bytes_invalid=0 send_seq=355 receive_seq=355 retransmit_seq=2 srtt=0.003 rttvar=0.003 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997466  heater_bed: target=0 temp=22.7 pwm=0.000 raspberry_pi: temp=32.1 SKR_Mini_E3_v2: temp=28.1 sysload=0.11 cputime=49.307 memavail=7513128 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=22.6 pwm=0.000
Stats 2134070.4: gcodein=0  mcu: mcu_awake=0.017 mcu_task_avg=0.000017 mcu_task_stddev=0.000022 bytes_write=8018 bytes_read=7139 bytes_retransmit=9 bytes_invalid=0 send_seq=356 receive_seq=356 retransmit_seq=2 srtt=0.003 rttvar=0.003 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997721  heater_bed: target=0 temp=22.6 pwm=0.000 raspberry_pi: temp=32.1 SKR_Mini_E3_v2: temp=28.2 sysload=0.11 cputime=49.345 memavail=7511592 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=22.6 pwm=0.000
Stats 2134071.4: gcodein=0  mcu: mcu_awake=0.017 mcu_task_avg=0.000017 mcu_task_stddev=0.000022 bytes_write=8024 bytes_read=7320 bytes_retransmit=9 bytes_invalid=0 send_seq=357 receive_seq=357 retransmit_seq=2 srtt=0.003 rttvar=0.003 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997581  heater_bed: target=0 temp=22.8 pwm=0.000 raspberry_pi: temp=32.1 SKR_Mini_E3_v2: temp=28.2 sysload=0.10 cputime=49.366 memavail=7511536 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=22.7 pwm=0.000
Stats 2134072.4: gcodein=0  mcu: mcu_awake=0.017 mcu_task_avg=0.000017 mcu_task_stddev=0.000022 bytes_write=8030 bytes_read=7486 bytes_retransmit=9 bytes_invalid=0 send_seq=358 receive_seq=358 retransmit_seq=2 srtt=0.002 rttvar=0.003 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997554  heater_bed: target=0 temp=22.9 pwm=0.000 raspberry_pi: temp=32.1 SKR_Mini_E3_v2: temp=28.2 sysload=0.10 cputime=49.384 memavail=7511536 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=22.6 pwm=0.000
Stats 2134073.4: gcodein=0  mcu: mcu_awake=0.017 mcu_task_avg=0.000017 mcu_task_stddev=0.000022 bytes_write=8036 bytes_read=7637 bytes_retransmit=9 bytes_invalid=0 send_seq=359 receive_seq=359 retransmit_seq=2 srtt=0.002 rttvar=0.003 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997563  heater_bed: target=0 temp=22.7 pwm=0.000 raspberry_pi: temp=32.6 SKR_Mini_E3_v2: temp=28.3 sysload=0.10 cputime=49.401 memavail=7511412 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=22.5 pwm=0.000
Stats 2134074.4: gcodein=0  mcu: mcu_awake=0.057 mcu_task_avg=0.000176 mcu_task_stddev=0.000243 bytes_write=8042 bytes_read=7835 bytes_retransmit=9 bytes_invalid=0 send_seq=360 receive_seq=360 retransmit_seq=2 srtt=0.002 rttvar=0.003 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997550  heater_bed: target=0 temp=22.7 pwm=0.000 raspberry_pi: temp=32.6 SKR_Mini_E3_v2: temp=28.3 sysload=0.10 cputime=49.421 memavail=7511264 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=22.5 pwm=0.000
Stats 2134075.4: gcodein=0  mcu: mcu_awake=0.057 mcu_task_avg=0.000176 mcu_task_stddev=0.000243 bytes_write=8048 bytes_read=8001 bytes_retransmit=9 bytes_invalid=0 send_seq=361 receive_seq=361 retransmit_seq=2 srtt=0.002 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997526  heater_bed: target=0 temp=23.0 pwm=0.000 raspberry_pi: temp=31.2 SKR_Mini_E3_v2: temp=28.1 sysload=0.10 cputime=49.439 memavail=7511292 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=22.5 pwm=0.000
Stats 2134076.4: gcodein=0  mcu: mcu_awake=0.057 mcu_task_avg=0.000176 mcu_task_stddev=0.000243 bytes_write=8054 bytes_read=8152 bytes_retransmit=9 bytes_invalid=0 send_seq=362 receive_seq=362 retransmit_seq=2 srtt=0.001 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997493  heater_bed: target=0 temp=22.8 pwm=0.000 raspberry_pi: temp=30.7 SKR_Mini_E3_v2: temp=28.3 sysload=0.10 cputime=49.457 memavail=7510716 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=22.5 pwm=0.000
Stats 2134077.4: gcodein=0  mcu: mcu_awake=0.057 mcu_task_avg=0.000176 mcu_task_stddev=0.000243 bytes_write=8060 bytes_read=8333 bytes_retransmit=9 bytes_invalid=0 send_seq=363 receive_seq=363 retransmit_seq=2 srtt=0.001 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997490  heater_bed: target=0 temp=22.6 pwm=0.000 raspberry_pi: temp=31.2 SKR_Mini_E3_v2: temp=28.3 sysload=0.10 cputime=49.476 memavail=7510428 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=22.6 pwm=0.000
Stats 2134078.4: gcodein=0  mcu: mcu_awake=0.057 mcu_task_avg=0.000176 mcu_task_stddev=0.000243 bytes_write=8066 bytes_read=8499 bytes_retransmit=9 bytes_invalid=0 send_seq=364 receive_seq=364 retransmit_seq=2 srtt=0.001 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997490  heater_bed: target=0 temp=22.7 pwm=0.000 raspberry_pi: temp=32.1 SKR_Mini_E3_v2: temp=28.0 sysload=0.10 cputime=49.494 memavail=7510348 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=22.6 pwm=0.000
Stats 2134079.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8072 bytes_read=8664 bytes_retransmit=9 bytes_invalid=0 send_seq=365 receive_seq=365 retransmit_seq=2 srtt=0.001 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997494  heater_bed: target=0 temp=22.8 pwm=0.000 raspberry_pi: temp=30.7 SKR_Mini_E3_v2: temp=28.3 sysload=0.10 cputime=49.513 memavail=7510528 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=22.6 pwm=0.000
Stats 2134080.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8078 bytes_read=8845 bytes_retransmit=9 bytes_invalid=0 send_seq=366 receive_seq=366 retransmit_seq=2 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997491  heater_bed: target=0 temp=22.7 pwm=0.000 raspberry_pi: temp=31.6 SKR_Mini_E3_v2: temp=28.4 sysload=0.10 cputime=49.533 memavail=7510416 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=22.6 pwm=0.000
Stats 2134081.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8084 bytes_read=9011 bytes_retransmit=9 bytes_invalid=0 send_seq=367 receive_seq=367 retransmit_seq=2 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997487  heater_bed: target=0 temp=22.6 pwm=0.000 raspberry_pi: temp=31.6 SKR_Mini_E3_v2: temp=28.4 sysload=0.09 cputime=49.552 memavail=7510416 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=22.6 pwm=0.000
Stats 2134082.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8090 bytes_read=9159 bytes_retransmit=9 bytes_invalid=0 send_seq=368 receive_seq=368 retransmit_seq=2 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997482  heater_bed: target=0 temp=22.7 pwm=0.000 raspberry_pi: temp=32.1 SKR_Mini_E3_v2: temp=28.3 sysload=0.09 cputime=49.570 memavail=7510416 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=22.6 pwm=0.000
Stats 2134083.4: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8096 bytes_read=9328 bytes_retransmit=9 bytes_invalid=0 send_seq=369 receive_seq=369 retransmit_seq=2 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997479  heater_bed: target=0 temp=22.7 pwm=0.000 raspberry_pi: temp=32.1 SKR_Mini_E3_v2: temp=28.4 sysload=0.09 cputime=49.589 memavail=7510224 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=22.6 pwm=0.000
Stats 2139873.5: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=64955 bytes_read=992760 bytes_retransmit=9 bytes_invalid=0 send_seq=7977 receive_seq=7977 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997323  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=34.1 SKR_Mini_E3_v2: temp=35.2 sysload=0.84 cputime=142.306 memavail=7512208 print_time=5850.136 buffer_time=0.449 print_stall=0 extruder: target=0 temp=23.2 pwm=0.000
Attempting MCU 'mcu' reset command
webhooks client 3039052920: Disconnected
Restarting printer
Start printer at Mon Jun 24 14:00:22 2024 (1719252022.5 2139875.1)
===== Config file =====
[bed_mesh]
speed = 200
horizontal_move_z = 5
mesh_min = 25,25
mesh_max = 290,330
probe_count = 4,4
mesh_pps = 2,2
algorithm = bicubic
fade_start = 1
fade_end = 10
fade_target = 0

[bed_screws]
screw1 = 30,45
screw2 = 335,315
screw3 = 30,315
screw4 = 335,45

[screws_tilt_adjust]
screw1 = 81,43
screw1_name = front left screw
screw2 = 350,315
screw2_name = rear right screw
screw3 = 81,315
screw3_name = front right screw
screw4 = 350,45
screw4_name = rear left screw
horizontal_move_z = 5
speed = 50
screw_thread = CW-M4

[stepper_x]
step_pin = PB13
dir_pin = !PB12
enable_pin = !PB14
microsteps = 16
rotation_distance = 40
endstop_pin = ^PC0
position_endstop = 350
position_max = 350
position_min = 0
homing_speed = 100

[tmc2209 stepper_x]
uart_pin = PC11
tx_pin = PC10
uart_address = 0
run_current = 0.680
stealthchop_threshold = 999999

[stepper_y]
step_pin = PB10
dir_pin = !PB2
enable_pin = !PB11
microsteps = 16
rotation_distance = 40
endstop_pin = ^PC1
position_endstop = 350
position_max = 350
position_min = 0
homing_speed = 75

[tmc2209 stepper_y]
uart_pin = PC11
tx_pin = PC10
uart_address = 2
run_current = 0.700
stealthchop_threshold = 999999

[stepper_z]
step_pin = PB0
dir_pin = !PC5
enable_pin = !PB1
microsteps = 16
rotation_distance = 4
endstop_pin = probe:z_virtual_endstop
position_max = 400
position_min = -3
homing_speed = 10

[tmc2209 stepper_z]
uart_pin = PC11
tx_pin = PC10
uart_address = 1
run_current = 0.800
stealthchop_threshold = 999999

[gcode_macro GET_TIMELAPSE_SETUP]
description = Print the Timelapse setup
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set output_txt = ["Timelapse Setup:"] %}
	{% set _dummy = output_txt.append("enable: %s" % tl.enable) %}
	{% set _dummy = output_txt.append("park: %s" % tl.park.enable) %}
	{% if tl.park.enable %}
	{% set _dummy = output_txt.append("park position: %s time: %s s" % (tl.park.pos, tl.park.time)) %}
	{% set _dummy = output_txt.append("park cord x:%s y:%s dz:%s" % (tl.park.coord.x, tl.park.coord.y, tl.park.coord.dz)) %}
	{% set _dummy = output_txt.append("travel speed: %s mm/s" % tl.speed.travel) %}
	{% endif %}
	{% set _dummy = output_txt.append("fw_retract: %s" % tl.extruder.fw_retract) %}
	{% if not tl.extruder.fw_retract %}
	{% set _dummy = output_txt.append("retract: %s mm speed: %s mm/s" % (tl.extruder.retract, tl.speed.retract)) %}
	{% set _dummy = output_txt.append("extrude: %s mm speed: %s mm/s" % (tl.extruder.extrude, tl.speed.extrude)) %}
	{% endif %}
	{% set _dummy = output_txt.append("verbose: %s" % tl.verbose) %}
	{action_respond_info(output_txt|join("\n"))}

[gcode_macro _SET_TIMELAPSE_SETUP]
description = Set user parameters for timelapse
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	{% set park = {'min'   : {'x': (min.x / 1.42)|round(3) if round_bed else min.x|round(3),
	'y': (min.y / 1.42)|round(3) if round_bed else min.y|round(3)},
	'max'   : {'x': (max.x / 1.42)|round(3) if round_bed else max.x|round(3),
	'y': (max.y / 1.42)|round(3) if round_bed else max.y|round(3)},
	'center': {'x': (max.x-(max.x-min.x)/2)|round(3),
	'y': (max.y-(max.y-min.y)/2)|round(3)}} %}
	
	{% if params.ENABLE %}
	{% if params.ENABLE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=enable VALUE={True if params.ENABLE|lower == 'true' else False}
	{% else %}
	{action_raise_error("ENABLE=%s not supported. Allowed values are [True, False]" % params.ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.VERBOSE %}
	{% if params.VERBOSE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=verbose VALUE={True if params.VERBOSE|lower == 'true' else False}
	{% else %}
	{action_raise_error("VERBOSE=%s not supported. Allowed values are [True, False]" % params.VERBOSE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_X %}
	{% if params.CUSTOM_POS_X|float >= min.x and params.CUSTOM_POS_X|float <= max.x %}
	{% set _dummy = tl.park.custom.update({'x':params.CUSTOM_POS_X|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_X=%s must be within [%s - %s]" % (params.CUSTOM_POS_X, min.x, max.x))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_Y %}
	{% if params.CUSTOM_POS_Y|float >= min.y and params.CUSTOM_POS_Y|float <= max.y %}
	{% set _dummy = tl.park.custom.update({'y':params.CUSTOM_POS_Y|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_Y=%s must be within [%s - %s]" % (params.CUSTOM_POS_Y, min.y, max.y))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_DZ %}
	{% if params.CUSTOM_POS_DZ|float >= min.z and params.CUSTOM_POS_DZ|float <= max.z %}
	{% set _dummy = tl.park.custom.update({'dz':params.CUSTOM_POS_DZ|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_DZ=%s must be within [%s - %s]" % (params.CUSTOM_POS_DZ, min.z, max.z))}
	{% endif %}
	{% endif %}
	{% if params.PARK_ENABLE %}
	{% if params.PARK_ENABLE|lower is in ['true', 'false'] %}
	{% set _dummy = tl.park.update({'enable':True if params.PARK_ENABLE|lower == 'true' else False}) %}
	{% else %}
	{action_raise_error("PARK_ENABLE=%s not supported. Allowed values are [True, False]" % params.PARK_ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.PARK_POS %}
	{% if params.PARK_POS|lower is in ['center','front_left','front_right','back_left','back_right','custom','x_only','y_only'] %}
	{% set dic = {'center'      : {'x': park.center.x   , 'y': park.center.y   , 'dz': 1                },
	'front_left'  : {'x': park.min.x      , 'y': park.min.y      , 'dz': 0                },
	'front_right' : {'x': park.max.x      , 'y': park.min.y      , 'dz': 0                },
	'back_left'   : {'x': park.min.x      , 'y': park.max.y      , 'dz': 0                },
	'back_right'  : {'x': park.max.x      , 'y': park.max.y      , 'dz': 0                },
	'custom'      : {'x': tl.park.custom.x, 'y': tl.park.custom.y, 'dz': tl.park.custom.dz},
	'x_only'      : {'x': tl.park.custom.x, 'y': 'none'          , 'dz': tl.park.custom.dz},
	'y_only'      : {'x': 'none'          , 'y': tl.park.custom.y, 'dz': tl.park.custom.dz}} %}
	{% set _dummy = tl.park.update({'pos':params.PARK_POS|lower}) %}
	{% set _dummy = tl.park.update({'coord':dic[tl.park.pos]}) %}
	{% else %}
	{action_raise_error("PARK_POS=%s not supported. Allowed values are [CENTER, FRONT_LEFT, FRONT_RIGHT, BACK_LEFT, BACK_RIGHT, CUSTOM, X_ONLY, Y_ONLY]"
	% params.PARK_POS|upper)}
	{% endif %}
	{% endif %}
	{% if params.PARK_TIME %}
	{% if params.PARK_TIME|float >= 0.0 %}
	{% set _dummy = tl.park.update({'time':params.PARK_TIME|float|round(3)}) %}
	{% else %}
	{action_raise_error("PARK_TIME=%s must be a positive number" % params.PARK_TIME)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=park VALUE="{tl.park}"
	{% if params.TRAVEL_SPEED %}
	{% if params.TRAVEL_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'travel':params.TRAVEL_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("TRAVEL_SPEED=%s must be larger than 0" % params.TRAVEL_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_SPEED %}
	{% if params.RETRACT_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'retract':params.RETRACT_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_SPEED=%s must be larger than 0" % params.RETRACT_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.EXTRUDE_SPEED %}
	{% if params.EXTRUDE_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'extrude':params.EXTRUDE_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_SPEED=%s must be larger than 0" % params.EXTRUDE_SPEED)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=speed VALUE="{tl.speed}"
	{% if params.EXTRUDE_DISTANCE %}
	{% if params.EXTRUDE_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'extrude':params.EXTRUDE_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_DISTANCE=%s must be specified as positiv number" % params.EXTRUDE_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_DISTANCE %}
	{% if params.RETRACT_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'retract':params.RETRACT_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_DISTANCE=%s must be specified as positiv number" % params.RETRACT_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.FW_RETRACT %}
	{% if params.FW_RETRACT|lower is in ['true', 'false'] %}
	{% if 'firmware_retraction' in printer.configfile.settings %}
	{% set _dummy = tl.extruder.update({'fw_retract': True if params.FW_RETRACT|lower == 'true' else False}) %}
	{% else %}
	{% set _dummy = tl.extruder.update({'fw_retract':False}) %}
	{% if params.FW_RETRACT|capitalize == 'True' %}
	{action_raise_error("[firmware_retraction] not defined in printer.cfg. Can not enable fw_retract")}
	{% endif %}
	{% endif %}
	{% else %}
	{action_raise_error("FW_RETRACT=%s not supported. Allowed values are [True, False]" % params.FW_RETRACT|capitalize)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=extruder VALUE="{tl.extruder}"
	{% if printer.configfile.settings['gcode_macro pause'] is defined %}
	{% set _dummy = tl.macro.update({'pause': printer.configfile.settings['gcode_macro pause'].rename_existing}) %}
	{% endif %}
	{% if printer.configfile.settings['gcode_macro resume'] is defined %}
	{% set _dummy = tl.macro.update({'resume': printer.configfile.settings['gcode_macro resume'].rename_existing}) %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=macro VALUE="{tl.macro}"

[gcode_macro TIMELAPSE_TAKE_FRAME]
description = Take Timelapse shoot
variable_enable = False
variable_takingframe = False
variable_park = {'enable': False,
	'pos'   : 'center',
	'time'  : 0.1,
	'custom': {'x': 0, 'y': 0, 'dz': 0},
	'coord' : {'x': 0, 'y': 0, 'dz': 0}}
variable_extruder = {'fw_retract': False,
	'retract': 1.0,
	'extrude': 1.0}
variable_speed = {'travel': 100,
	'retract': 15,
	'extrude': 15}
variable_verbose = True
variable_check_time = 0.5
variable_restore = {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500, 'e':0, 'factor': {'speed': 1.0, 'extrude': 1.0}}
variable_macro = {'pause': 'PAUSE', 'resume': 'RESUME'}
variable_is_paused = False
gcode = 
	{% set hyperlapse = True if params.HYPERLAPSE and params.HYPERLAPSE|lower =='true' else False %}
	{% if enable %}
	{% if (hyperlapse and printer['gcode_macro HYPERLAPSE'].run) or
	(not hyperlapse and not printer['gcode_macro HYPERLAPSE'].run) %}
	{% if park.enable %}
	{% set pos = {'x': 'X' + park.coord.x|string if park.pos != 'y_only' else '',
	'y': 'Y' + park.coord.y|string if park.pos != 'x_only' else '',
	'z': 'Z'+ [printer.gcode_move.gcode_position.z + park.coord.dz, printer.toolhead.axis_maximum.z]|min|string} %}
	{% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
	'extrude'    : printer.gcode_move.absolute_extrude},
	'speed'   : printer.gcode_move.speed,
	'e'       : printer.gcode_move.gcode_position.e,
	'factor'  : {'speed'  : printer.gcode_move.speed_factor,
	'extrude': printer.gcode_move.extrude_factor}} %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=restore VALUE="{restore}"
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, minimum extruder temperature not reached!")}{% endif %}
	{% else %}
	{% if extruder.fw_retract %}
	G10
	{% else %}
	M83
	G0 E-{extruder.retract} F{speed.retract * 60}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=True
	{macro.pause}
	SET_GCODE_OFFSET X=0 Y=0
	G90
	{% if "xyz" not in printer.toolhead.homed_axes %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, axis not homed yet!")}{% endif %}
	{% else %}
	G0 {pos.x} {pos.y} {pos.z} F{speed.travel * 60}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=takingframe VALUE=True
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION={check_time}
	M400
	{% endif %}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE={hyperlapse}
	{% endif %}
	{% else %}
	{% if verbose %}{action_respond_info("Timelapse: disabled, take frame ignored")}{% endif %}
	{% endif %}

[gcode_macro _TIMELAPSE_NEW_FRAME]
description = action call for timelapse shoot. must be a seperate macro
gcode = 
	{action_call_remote_method("timelapse_newframe",
	macropark=printer['gcode_macro TIMELAPSE_TAKE_FRAME'].park,
	hyperlapse=params.HYPERLAPSE)}

[delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME]
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set factor = {'speed': printer.gcode_move.speed_factor, 'extrude': printer.gcode_move.extrude_factor} %}
	{% if tl.takingframe %}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION={tl.check_time}
	{% else %}
	{tl.macro.resume} VELOCITY={tl.speed.travel}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=False
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{action_respond_info("Timelapse: Warning minimum extruder temperature not reached!")}
	{% else %}
	{% if tl.extruder.fw_retract %}
	G11
	{% else %}
	G0 E{tl.extruder.extrude} F{tl.speed.extrude * 60}
	G0 F{tl.restore.speed}
	{% if tl.restore.absolute.extrude %}
	M82
	G92 E{tl.restore.e}
	{% endif %}
	{% endif %}
	{% endif %}
	{% if tl.restore.factor.speed   != factor.speed   %} M220 S{(factor.speed*100)|round(0)}   {% endif %}
	{% if tl.restore.factor.extrude != factor.extrude %} M221 S{(factor.extrude*100)|round(0)} {% endif %}
	{% if not tl.restore.absolute.coordinates %} G91 {% endif %}
	{% endif %}

[gcode_macro HYPERLAPSE]
description = Start/Stop a hyperlapse recording
variable_cycle = 0
variable_run = False
gcode = 
	{% set cycle = params.CYCLE|default(30)|int %}
	{% if params.ACTION and params.ACTION|lower == 'start' %}
	{action_respond_info("Hyperlapse: frames started (Cycle %d sec)" % cycle)}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=True
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={cycle}
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True
	{% elif params.ACTION and params.ACTION|lower == 'stop' %}
	{% if run %}{action_respond_info("Hyperlapse: frames stopped")}{% endif %}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=False
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION=0
	{% else %}
	{action_raise_error("Hyperlapse: No valid input parameter
	Use:
	- HYPERLAPSE ACTION=START [CYCLE=time]
	- HYPERLAPSE ACTION=STOP")}
	{% endif %}

[delayed_gcode _HYPERLAPSE_LOOP]
gcode = 
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={printer["gcode_macro HYPERLAPSE"].cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True

[gcode_macro TIMELAPSE_RENDER]
description = Render Timelapse video and wait for the result
variable_render = False
variable_run_identifier = 0
gcode = 
	{action_respond_info("Timelapse: Rendering started")}
	{action_call_remote_method("timelapse_render", byrendermacro="True")}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=render VALUE=True
	{printer.configfile.settings['gcode_macro pause'].rename_existing}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5

[delayed_gcode _WAIT_TIMELAPSE_RENDER]
gcode = 
	{% set ri = printer['gcode_macro TIMELAPSE_RENDER'].run_identifier % 4 %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=run_identifier VALUE={ri + 1}
	{% if printer['gcode_macro TIMELAPSE_RENDER'].render %}
	M117 Rendering {['-','\\','|','/'][ri]}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5
	{% else %}
	{action_respond_info("Timelapse: Rendering finished")}
	M117
	{printer.configfile.settings['gcode_macro resume'].rename_existing}
	{% endif %}

[gcode_macro TEST_STREAM_DELAY]
description = Helper macro to find stream and park delay
gcode = 
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set act = printer.toolhead.position %}
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% if act.z > 5.0 %}
	G0 X{min.x + 5.0} F{tl.speed.travel|int * 60}
	G0 X{(max.x-min.x)/2}
	G4 P{tl.park.time|float * 1000}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE=FALSE
	G0 X{max.x - 5.0}
	{% else %}
	{action_raise_error("Toolhead z %.3f to low. Please place head above z = 5.0" % act.z)}
	{% endif %}

[pause_resume]

[gcode_macro START_PRINT]
gcode = 
	{% set T_BED = params.T_BED|default(50) %}
	{% set T_EXTRUDER = params.T_EXTRUDER|default(205) %}
	
	M117 Waiting for Temps
	
	M140 S{T_BED}
	M190 S{T_BED}
	M104 S{T_EXTRUDER|float*0.50}
	
	
	M117 Building Mesh
	G28
	G90
	BED_MESH_CALIBRATE
	BED_MESH_PROFILE LOAD=default
	
	
	G1 X10.0 Y20.0 F5000.0
	M117 Waiting for Temps
	M104 S{T_EXTRUDER}
	M109 S{T_EXTRUDER}
	
	
	PRIME_LINE
	M117 Printing...

[gcode_macro END_PRINT]
gcode = 
	
	G91
	G1 E-0.3 F3000
	G1 E-0.3 Z0.2 F2000
	G1 X5 Y5 F3000; Wipe out
	G1 Z10
	
	G90
	G1 X180 Y340 F2000
	
	M104 S0
	M140 S0
	M107
	
	M84
	SET_SKEW CLEAR=1
	BED_MESH_CLEAR
	M117 Done Printing!
	TIMELAPSE_RENDER

[gcode_macro PRIME_LINE]
gcode = 
	M117 Prime Line
	G92 E0
	
	G1 Z2.0 F3000
	
	
	
	
	
	
	
	G1 X10.1 Y20 Z0.28 F5000.0
	G1 X10.1 Y200 Z0.28 F1500.0 E15
	G1 X10.4 Y200 Z0.28 F5000.0
	G1 X10.4 Y20 Z0.28 F1500.0 E30
	
	G92 E0
	G1 Z2.0 F3000

[gcode_macro G29]
gcode = 
	G28
	BED_MESH_CALIBRATE
	G0 X360 Y360 Z10 F6000
	BED_MESH_PROFILE save=default

[gcode_macro M125]
gcode = 
	SAVE_GCODE_STATE NAME=parking
	M117 Parking toolhead
	G91
	G1 Z10 F600
	G90
	G1 X350 Y350 F4000
	RESTORE_GCODE_STATE NAME=parking

[gcode_macro LOW_TEMP_CHECK|T_EXTRUDER]
gcode = 
	{% set T_EXTRUDER = params.T_EXTRUDER|default(205) %}
	{% if printer.extruder.target != 0 %}
	{% if printer.extruder.temperature < printer.extruder.target %}
	M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
	M109 S{printer.extruder.target|float}
	{% endif %}
	{% else %}
	{% if printer.extruder.target < T_EXTRUDER %}
	M118 No setpoint, heating to {T_EXTRUDER}.
	M109 S{T_EXTRUDER}
	{% endif %}
	{% endif %}

[gcode_macro _M701]
description = Load Filament
gcode = 
	SAVE_GCODE_STATE NAME=loading_filament
	M117 Loading Filament
	M83
	G92 E0.0
	LOW_TEMP_CHECK
	G1 E120 F3000
	G1 E50 F200
	G92 E0.0
	RESTORE_GCODE_STATE NAME=loading_filament

[gcode_macro LOAD_FILAMENT]
variable_load_distance = 50
variable_purge_distance = 25
gcode = 
	{% set speed = params.SPEED|default(300) %}
	{% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
	SAVE_GCODE_STATE NAME=loading_filament
	G91
	G92 E0
	G1 E{load_distance} F{max_velocity}
	G1 E{purge_distance} F{speed}
	RESTORE_GCODE_STATE NAME=loading_filament

[gcode_macro _M702]
description = Unload Filament
gcode = 
	SAVE_GCODE_STATE NAME=unloading_filament
	M125
	M117 Unloading Filament
	LOW_TEMP_CHECK
	G91
	G1 E10 F100
	G92 E0.0
	G1 E-150 F3000
	G92 E0.0
	RESTORE_GCODE_STATE NAME=unloading_filament

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance = 50
variable_purge_distance = 25
gcode = 
	{% set speed = params.SPEED|default(300) %}
	{% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
	SAVE_GCODE_STATE NAME=unloading_filament
	G91
	G92 E0
	G1 E{purge_distance} F{speed}
	G1 E-{unload_distance} F{max_velocity}
	RESTORE_GCODE_STATE NAME=unloading_filament

[gcode_macro M600]
description = Change Filament
gcode = 
	M117 Filament Change
	M118 Filament Change
	SAVE_GCODE_STATE NAME=filament_change
	PAUSE
	LOW_TEMP_CHECK
	G91
	G1 E-1 F300
	M125
	G1 E-350 F4000
	RESTORE_GCODE_STATE NAME=filament_change

[gcode_macro COUNTDOWN]
gcode = 
	{% set MSG = params.MSG|default("Time: ") %}
	{% set TIME = params.TIME|default(10) %}
	
	{% for s in range(TIME|int, 0, -1) %}
	
	G4 P1000
	
	M117 {params.MSG} {s}s
	M118 {params.MSG} {s}s
	{% endfor %}

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set x = params.X|default(5) %}
	{% set y = params.Y|default(225) %}
	{% set z = params.Z|default(10)|float %}
	{% set e = params.E|default(1) %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set lift_z = z|abs %}
	{% if act_z < (max_z - lift_z) %}
	{% set z_safe = lift_z %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	PAUSE_BASE
	G91
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{e} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe}
	G90
	G1 X{x} Y{y} F6000
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
gcode = 
	
	{% set e = params.E|default(1) %}
	
	{% if 'VELOCITY' in params|upper %}
	{% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
	{%else %}
	{% set get_params = "" %}
	{% endif %}
	
	G91
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E{e} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	BASE_CANCEL_PRINT{% for k in params %}{' '~k~'='~params[k]}{% endfor %}

[virtual_sdcard]
path = ~/printer_data/gcodes

[display_status]

[menu __main]
type = list
name = Main

[menu __main __pause]
type = command
enable = {(printer.print_stats.state == "printing") and ("pause_resume" in printer)}
index = 0
name = Pause printing
gcode = 
	PAUSE
	{ menu.exit() }

[menu __main __resume]
type = command
enable = {(printer.print_stats.state == "paused") and ("pause_resume" in printer)}
index = 0
name = Resume printing
gcode = 
	RESUME
	{ menu.exit() }

[menu __main __abort]
type = command
enable = {((printer.print_stats.state == "printing" or printer.print_stats.state == "paused")) and ("pause_resume" in printer)}
index = 1
name = Abort printing
gcode = 
	CANCEL_PRINT
	{ menu.exit() }

[menu __main __tune]
type = list
enable = {printer.idle_timeout.state == "Printing"}
name = Tune

[menu __main __tune __speed]
type = input
name = Speed: {'%3d' % (menu.input*100)}%
input = {printer.gcode_move.speed_factor}
input_min = 0.01
input_max = 5
input_step = 0.01
realtime = True
gcode = 
	M220 S{'%d' % (menu.input*100)}

[menu __main __tune __flow]
type = input
name = Flow: {'%3d' % (menu.input*100)}%
input = {printer.gcode_move.extrude_factor}
input_min = 0.01
input_max = 2
input_step = 0.01
realtime = True
gcode = 
	M221 S{'%d' % (menu.input*100)}

[menu __main __tune __offsetz]
type = input
name = Offset Z:{'%05.3f' % menu.input}
input = {printer.gcode_move.homing_origin.z}
input_min = -5
input_max = 5
input_step = 0.005
realtime = True
gcode = 
	SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1

[menu __main __tune __hotend0_target]
type = input
enable = {('extruder' in printer) and ('extruder' in printer.heaters.available_heaters)}
name = {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input = {printer.extruder.target}
input_min = 0
input_max = {printer.configfile.config.extruder.max_temp}
input_step = 1
realtime = True
gcode = 
	M104 T0 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __tune __hotend1_target]
type = input
enable = {('extruder1' in printer) and ('extruder1' in printer.heaters.available_heaters)}
name = {"Ex1:%3.0f (%4.0f)" % (menu.input, printer.extruder1.temperature)}
input = {printer.extruder1.target}
input_min = 0
input_max = {printer.configfile.config.extruder1.max_temp}
input_step = 1
realtime = True
gcode = 
	M104 T1 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __tune __hotbed_target]
type = input
enable = {'heater_bed' in printer}
name = {"Bed:%3.0f (%4.0f)" % (menu.input, printer.heater_bed.temperature)}
input = {printer.heater_bed.target}
input_min = 0
input_max = {printer.configfile.config.heater_bed.max_temp}
input_step = 1
realtime = True
gcode = 
	M140 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __tune __fanspeed]
type = input
enable = {'fan' in printer}
name = Fan speed: {'%3d' % (menu.input*100)}%
input = {printer.fan.speed}
input_min = 0
input_max = 1
input_step = 0.01
realtime = True
gcode = 
	M106 S{'%d' % (menu.input*255)}

[menu __main __octoprint]
type = disabled

[menu __main __octoprint __pause]
type = disabled

[menu __main __octoprint __resume]
type = disabled

[menu __main __octoprint __abort]
type = disabled

[menu __main __sdcard]
type = vsdlist
enable = {not printer.idle_timeout.state == "Printing" and ('virtual_sdcard' in printer)}
name = SD Card

[menu __main __sdcard __start]
type = command
enable = {('virtual_sdcard' in printer) and printer.virtual_sdcard.file_path and not printer.virtual_sdcard.is_active}
name = Start printing
gcode = 
	M24
	{ menu.exit() }

[menu __main __sdcard __resume]
type = disabled

[menu __main __sdcard __pause]
type = disabled

[menu __main __sdcard __cancel]
type = disabled

[menu __main __control]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Control

[menu __main __control __home]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Home All
gcode = G28

[menu __main __control __homez]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Home Z
gcode = G28 Z

[menu __main __control __homexy]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Home X/Y
gcode = G28 X Y

[menu __main __control __disable]
type = command
name = Steppers off
gcode = 
	M84
	M18

[menu __main __control __fanonoff]
type = input
enable = {'fan' in printer}
name = Fan: {'ON ' if menu.input else 'OFF'}
input = {printer.fan.speed}
input_min = 0
input_max = 1
input_step = 1
realtime = True
gcode = 
	M106 S{255 if menu.input else 0}

[menu __main __control __fanspeed]
type = input
enable = {'fan' in printer}
name = Fan speed: {'%3d' % (menu.input*100)}%
input = {printer.fan.speed}
input_min = 0
input_max = 1
input_step = 0.01
realtime = True
gcode = 
	M106 S{'%d' % (menu.input*255)}

[menu __main __control __caselightonoff]
type = input
enable = {'output_pin caselight' in printer}
name = Lights: {'ON ' if menu.input else 'OFF'}
input = {printer['output_pin caselight'].value}
input_min = 0
input_max = 1
input_step = 1
realtime = True
gcode = 
	SET_PIN PIN=caselight VALUE={1 if menu.input else 0}

[menu __main __control __caselightpwm]
type = input
enable = {'output_pin caselight' in printer}
name = Lights: {'%3d' % (menu.input*100)}%
input = {printer['output_pin caselight'].value}
input_min = 0.0
input_max = 1.0
input_step = 0.01
realtime = True
gcode = 
	SET_PIN PIN=caselight VALUE={menu.input}

[menu __main __control __move_10mm]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Move 10mm

[menu __main __control __move_10mm __axis_x]
type = input
name = Move X:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.x}
input_min = {printer.toolhead.axis_minimum.x}
input_max = {printer.toolhead.axis_maximum.x}
input_step = 10.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 X{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_y]
type = input
name = Move Y:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.y}
input_min = {printer.toolhead.axis_minimum.y}
input_max = {printer.toolhead.axis_maximum.y}
input_step = 10.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Y{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_z]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move Z:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.z}
input_min = 0
input_max = {printer.toolhead.axis_maximum.z}
input_step = 10.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Z{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_e]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move E:{'%+06.1f' % menu.input}
input = 0
input_min = -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max = {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step = 10.0
realtime = False
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	M83
	G1 E{menu.input} F240
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Move 1mm

[menu __main __control __move_1mm __axis_x]
type = input
name = Move X:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.x}
input_min = {printer.toolhead.axis_minimum.x}
input_max = {printer.toolhead.axis_maximum.x}
input_step = 1.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 X{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_y]
type = input
name = Move Y:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.y}
input_min = {printer.toolhead.axis_minimum.y}
input_max = {printer.toolhead.axis_maximum.y}
input_step = 1.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Y{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_z]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move Z:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.z}
input_min = 0
input_max = {printer.toolhead.axis_maximum.z}
input_step = 1.0
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Z{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_e]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move E:{'%+06.1f' % menu.input}
input = 0
input_min = -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max = {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step = 1.0
realtime = False
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	M83
	G1 E{menu.input} F240
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Move 0.1mm

[menu __main __control __move_01mm __axis_x]
type = input
name = Move X:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.x}
input_min = {printer.toolhead.axis_minimum.x}
input_max = {printer.toolhead.axis_maximum.x}
input_step = 0.1
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 X{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_y]
type = input
name = Move Y:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.y}
input_min = {printer.toolhead.axis_minimum.y}
input_max = {printer.toolhead.axis_maximum.y}
input_step = 0.1
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Y{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_z]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move Z:{'%05.1f' % menu.input}
input = {printer.gcode_move.gcode_position.z}
input_min = 0
input_max = {printer.toolhead.axis_maximum.z}
input_step = 0.1
realtime = True
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	G90
	G1 Z{menu.input}
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_e]
type = input
enable = {not printer.idle_timeout.state == "Printing"}
name = Move E:{'%+06.1f' % menu.input}
input = 0
input_min = -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max = {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step = 0.1
realtime = False
gcode = 
	SAVE_GCODE_STATE NAME=__move__axis
	M83
	G1 E{menu.input} F240
	RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __temp]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Temperature

[menu __main __temp __hotend0_target]
type = input
enable = {('extruder' in printer) and ('extruder' in printer.heaters.available_heaters)}
name = {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input = {printer.extruder.target}
input_min = 0
input_max = {printer.configfile.config.extruder.max_temp}
input_step = 1
gcode = 
	M104 T0 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __temp __hotend1_target]
type = input
enable = {('extruder1' in printer) and ('extruder1' in printer.heaters.available_heaters)}
name = {"Ex1:%3.0f (%4.0f)" % (menu.input, printer.extruder1.temperature)}
input = {printer.extruder1.target}
input_min = 0
input_max = {printer.configfile.config.extruder1.max_temp}
input_step = 1
gcode = 
	M104 T1 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __temp __hotbed_target]
type = input
enable = {'heater_bed' in printer}
name = {"Bed:%3.0f (%4.0f)" % (menu.input, printer.heater_bed.temperature)}
input = {printer.heater_bed.target}
input_min = 0
input_max = {printer.configfile.config.heater_bed.max_temp}
input_step = 1
gcode = 
	M140 S{'%.0f' % menu.input}
	{ menu.exit()}

[menu __main __filament]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Filament

[menu __main __filament __hotend0_target]
type = input
enable = {'extruder' in printer}
name = {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input = {printer.extruder.target}
input_min = 0
input_max = {printer.configfile.config.extruder.max_temp}
input_step = 1
gcode = M104 T0 S{'%.0f' % menu.input}

[menu __main __filament __loadf]
type = command
name = Load Fil. fast
gcode = 
	SAVE_GCODE_STATE NAME=__filament__load
	M83
	G1 E100 F960
	RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __loads]
type = command
name = Load Fil. slow
gcode = 
	SAVE_GCODE_STATE NAME=__filament__load
	M83
	G1 E50 F240
	RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __unloadf]
type = command
name = Unload Fil.fast
gcode = 
	SAVE_GCODE_STATE NAME=__filament__load
	M83
	G1 E-100 F960
	RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __unloads]
type = command
name = Unload Fil.slow
gcode = 
	SAVE_GCODE_STATE NAME=__filament__load
	M83
	G1 E-50 F240
	RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __feed]
type = input
name = Feed: {'%.1f' % menu.input}
input = 5
input_step = 0.1
gcode = 
	SAVE_GCODE_STATE NAME=__filament__load
	M83
	G1 E{'%.1f' % menu.input} F60
	RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __setup]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Setup

[menu __main __setup __save_config]
type = command
name = Save config
gcode = SAVE_CONFIG

[menu __main __setup __restart]
type = list
name = Restart

[menu __main __setup __restart __host_restart]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Restart host
gcode = RESTART

[menu __main __setup __restart __firmware_restart]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Restart FW
gcode = FIRMWARE_RESTART

[menu __main __setup __tuning]
type = list
name = PID tuning

[menu __main __setup __tuning __hotend_pid_tuning]
type = command
enable = {(not printer.idle_timeout.state == "Printing") and ('extruder' in printer)}
name = Tune Hotend PID
gcode = PID_CALIBRATE HEATER=extruder TARGET=210 WRITE_FILE=1

[menu __main __setup __tuning __hotbed_pid_tuning]
type = command
enable = {(not printer.idle_timeout.state == "Printing") and ('heater_bed' in printer)}
name = Tune Hotbed PID
gcode = PID_CALIBRATE HEATER=heater_bed TARGET=60 WRITE_FILE=1

[menu __main __setup __calib]
type = list
name = Calibration

[menu __main __setup __calib __delta_calib_auto]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Delta cal. auto
gcode = 
	G28
	DELTA_CALIBRATE

[menu __main __setup __calib __delta_calib_man]
type = list
enable = {not printer.idle_timeout.state == "Printing"}
name = Delta cal. man

[menu __main __setup __calib __bedprobe]
type = command
enable = {not printer.idle_timeout.state == "Printing"}
name = Bed probe
gcode = PROBE

[menu __main __setup __calib __delta_calib_man __start]
type = command
name = Start probing
gcode = 
	G28
	DELTA_CALIBRATE METHOD=manual

[menu __main __setup __calib __delta_calib_man __move_z]
type = input
name = Move Z: {'%03.2f' % menu.input}
input = {printer.gcode_move.gcode_position.z}
input_step = 1
realtime = True
gcode = 
	{%- if menu.event == 'change' -%}
	G1 Z{'%.2f' % menu.input}
	{%- elif menu.event == 'long_click' -%}
	G1 Z{'%.2f' % menu.input}
	SAVE_GCODE_STATE NAME=__move__axis
	G91
	G1 Z2
	G1 Z-2
	RESTORE_GCODE_STATE NAME=__move__axis
	{%- endif -%}

[menu __main __setup __calib __delta_calib_man __test_z]
type = input
name = Test Z: {['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
input = 6
input_min = 0
input_max = 11
input_step = 1
gcode = 
	{%- if menu.event == 'long_click' -%}
	TESTZ Z={['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
	{%- endif -%}

[menu __main __setup __calib __delta_calib_man __accept]
type = command
name = Accept
gcode = ACCEPT

[menu __main __setup __calib __delta_calib_man __abort]
type = command
name = Abort
gcode = ABORT

[menu __main __setup __dump]
type = command
name = Dump parameters
gcode = 
	{% for name1 in printer %}
	{% for name2 in printer[name1] %}
	{ action_respond_info("printer['%s'].%s = %s"
	% (name1, name2, printer[name1][name2])) }
	{% else %}
	{ action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
	{% endfor %}
	{% endfor %}

[menu __main __temp __preheat_pla]
type = list
name = Set PLA

[menu __main __temp __preheat_pla __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Preheat all
gcode = 
	M140 S60
	M104 S105

[menu __main __temp __preheat_pla __hotend]
type = command
enable = {'extruder' in printer}
name = Preheat hotend
gcode = M104 S105

[menu __main __temp __preheat_pla __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Preheat hotbed
gcode = M140 S60

[menu __main __temp __preheat_abs]
type = list
name = Set PLA+

[menu __main __temp __preheat_abs __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Preheat all
gcode = 
	M140 S60
	M104 S112.5

[menu __main __temp __preheat_abs __hotend]
type = command
enable = {'extruder' in printer}
name = Preheat hotend
gcode = M104 S112.5

[menu __main __temp __preheat_abs __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Preheat hotbed
gcode = M140 S60

[menu __main __temp __cooldown]
type = list
name = Set PETG

[menu __main __temp __cooldown __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Preheat all
gcode = 
	M140 S70
	M104 S120

[menu __main __temp __cooldown __hotend]
type = command
enable = {'extruder' in printer}
name = Preheat hotend
gcode = M104 S120

[menu __main __temp __cooldown __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Preheat hotbed
gcode = M140 S70

[menu __main __temp __preheat_nylon]
type = list
name = Set PC

[menu __main __temp __preheat_nylon __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Preheat all
gcode = 
	M140 S100
	M104 S145

[menu __main __temp __preheat_nylon __hotend]
type = command
enable = {'extruder' in printer}
name = Preheat hotend
gcode = M104 S145

[menu __main __temp __preheat_nylon __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Preheat hotbed
gcode = M140 S100

[menu __main __temp __preheat_tpu]
type = list
name = Set TPU

[menu __main __temp __preheat_tpu __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Preheat all
gcode = 
	M140 S50
	M104 S110

[menu __main __temp __preheat_tpu __hotend]
type = command
enable = {'extruder' in printer}
name = Preheat hotend
gcode = M104 S110

[menu __main __temp __preheat_tpu __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Preheat hotbed
gcode = M140 S50

[menu __main __temp __cd]
type = list
name = Cooldown

[menu __main __temp __cd __all]
type = command
enable = {('extruder' in printer) and ('heater_bed' in printer)}
name = Cooldown all
gcode = 
	M140 S0
	M104 S0

[menu __main __temp __cd __hotend]
type = command
enable = {'extruder' in printer}
name = Cooldown hotend
gcode = M104 S0

[menu __main __temp __cd __hotbed]
type = command
enable = {'heater_bed' in printer}
name = Cooldown hotbed
gcode = M140 S0

[mcu]
serial = /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0

[static_digital_output usb_pullup_enable]
pins = !PA14

[save_variables]
filename = ~/printer_data/config/variables.cfg

[board_pins]
aliases = 
	
	EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8,  EXP1_9=<GND>,
	EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>

[display]
lcd_type = emulated_st7920
en_pin = EXP1_7
spi_software_sclk_pin = EXP1_6
spi_software_mosi_pin = EXP1_8
spi_software_miso_pin = PA3
encoder_pins = ^EXP1_5, ^EXP1_3
click_pin = ^!EXP1_2

[printer]
kinematics = cartesian
max_velocity = 500
max_accel = 1000
minimum_cruise_ratio = 0.5
max_z_velocity = 10
max_z_accel = 100
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 0.2

[skew_correction]

[exclude_object]

[force_move]

[idle_timeout]
gcode = 
	{% if printer.webhooks.state|lower == 'ready' %}
	{% if printer.pause_resume.is_paused|lower == 'false' %}
	M117 Idle timeout reached
	TURN_OFF_HEATERS
	M84
	{% endif %}
	{% endif %}
timeout = 7200

[firmware_retraction]
retract_length = 1
retract_speed = 40
unretract_speed = 25

[extruder]
step_pin = PB3
dir_pin = !PB4
enable_pin = !PD2
microsteps = 16
rotation_distance = 7.602
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PC8
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PA0
min_temp = 10
max_temp = 300
min_extrude_temp = 180
max_extrude_only_distance = 500
pressure_advance_smooth_time = 0.04
control = pid
pid_kp = 32.522
pid_ki = 4.169
pid_kd = 63.417

[tmc2209 extruder]
uart_pin = PC11
tx_pin = PC10
uart_address = 3
run_current = 0.650

[bltouch]
sensor_pin = ^PC2
control_pin = PA1
pin_move_time = 0.675
stow_on_each_sample = False
probe_with_touch_mode = True
pin_up_touch_mode_reports_triggered = False
x_offset = -45
y_offset = -15
speed = 20
lift_speed = 20
samples = 1
sample_retract_dist = 5
samples_tolerance_retries = 3
z_offset = 2.430

[safe_z_home]
home_xy_position = 235, 189
speed = 200
z_hop = 5
z_hop_speed = 20

[heater_bed]
heater_pin = PC9
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC3
min_temp = 5
max_temp = 130
control = pid
pid_kp = 58.901
pid_ki = 0.646
pid_kd = 1342.937

[heater_fan heatbreak_cooling_fan]
pin = PC7
heater = extruder
heater_temp = 50.0

[fan]
pin = PC6

[temperature_sensor raspberry_pi]
sensor_type = temperature_host

[temperature_sensor SKR_Mini_E3_v2]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[filament_switch_sensor e0_sensor]
pause_on_runout = True
runout_gcode = 
	M600
switch_pin = PC15

[gcode_macro _km_options]
variable_load_length = 50.0
variable_start_purge_length = 30
gcode = 

[bed_mesh default]
version = 1
points = 
	-0.458750, -0.263750, -0.215000, -0.356250
	-0.220000, -0.061250, -0.010000, -0.145000
	-0.206250, -0.102500, -0.100000, -0.158750
	-0.480000, -0.346250, -0.347500, -0.361250
x_count = 4
y_count = 4
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 25.0
max_x = 289.99
min_y = 25.0
max_y = 329.98
=======================
Declaration of '__main' hides previous menuitem declaration
Declaration of '__main __tune' hides previous menuitem declaration
Declaration of '__main __tune __speed' hides previous menuitem declaration
Declaration of '__main __tune __flow' hides previous menuitem declaration
Declaration of '__main __tune __offsetz' hides previous menuitem declaration
Declaration of '__main __octoprint' hides previous menuitem declaration
Declaration of '__main __octoprint __pause' hides previous menuitem declaration
Declaration of '__main __octoprint __resume' hides previous menuitem declaration
Declaration of '__main __octoprint __abort' hides previous menuitem declaration
Declaration of '__main __sdcard' hides previous menuitem declaration
Declaration of '__main __sdcard __start' hides previous menuitem declaration
Declaration of '__main __sdcard __resume' hides previous menuitem declaration
Declaration of '__main __sdcard __pause' hides previous menuitem declaration
Declaration of '__main __sdcard __cancel' hides previous menuitem declaration
Declaration of '__main __control' hides previous menuitem declaration
Declaration of '__main __control __home' hides previous menuitem declaration
Declaration of '__main __control __homez' hides previous menuitem declaration
Declaration of '__main __control __homexy' hides previous menuitem declaration
Declaration of '__main __control __disable' hides previous menuitem declaration
Declaration of '__main __control __fanonoff' hides previous menuitem declaration
Declaration of '__main __control __fanspeed' hides previous menuitem declaration
Declaration of '__main __control __caselightonoff' hides previous menuitem declaration
Declaration of '__main __control __caselightpwm' hides previous menuitem declaration
Declaration of '__main __control __move_10mm' hides previous menuitem declaration
Declaration of '__main __control __move_10mm __axis_x' hides previous menuitem declaration
Declaration of '__main __control __move_10mm __axis_y' hides previous menuitem declaration
Declaration of '__main __control __move_10mm __axis_z' hides previous menuitem declaration
Declaration of '__main __control __move_10mm __axis_e' hides previous menuitem declaration
Declaration of '__main __control __move_1mm' hides previous menuitem declaration
Declaration of '__main __control __move_1mm __axis_x' hides previous menuitem declaration
Declaration of '__main __control __move_1mm __axis_y' hides previous menuitem declaration
Declaration of '__main __control __move_1mm __axis_z' hides previous menuitem declaration
Declaration of '__main __control __move_1mm __axis_e' hides previous menuitem declaration
Declaration of '__main __control __move_01mm' hides previous menuitem declaration
Declaration of '__main __control __move_01mm __axis_x' hides previous menuitem declaration
Declaration of '__main __control __move_01mm __axis_y' hides previous menuitem declaration
Declaration of '__main __control __move_01mm __axis_z' hides previous menuitem declaration
Declaration of '__main __control __move_01mm __axis_e' hides previous menuitem declaration
Declaration of '__main __temp' hides previous menuitem declaration
Declaration of '__main __temp __hotend0_target' hides previous menuitem declaration
Declaration of '__main __temp __hotend1_target' hides previous menuitem declaration
Declaration of '__main __temp __hotbed_target' hides previous menuitem declaration
Declaration of '__main __filament' hides previous menuitem declaration
Declaration of '__main __filament __hotend0_target' hides previous menuitem declaration
Declaration of '__main __filament __loadf' hides previous menuitem declaration
Declaration of '__main __filament __loads' hides previous menuitem declaration
Declaration of '__main __filament __unloadf' hides previous menuitem declaration
Declaration of '__main __filament __unloads' hides previous menuitem declaration
Declaration of '__main __filament __feed' hides previous menuitem declaration
Declaration of '__main __setup' hides previous menuitem declaration
Declaration of '__main __setup __save_config' hides previous menuitem declaration
Declaration of '__main __setup __restart' hides previous menuitem declaration
Declaration of '__main __setup __restart __host_restart' hides previous menuitem declaration
Declaration of '__main __setup __restart __firmware_restart' hides previous menuitem declaration
Declaration of '__main __setup __tuning' hides previous menuitem declaration
Declaration of '__main __setup __tuning __hotend_pid_tuning' hides previous menuitem declaration
Declaration of '__main __setup __tuning __hotbed_pid_tuning' hides previous menuitem declaration
Declaration of '__main __setup __calib' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_auto' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man' hides previous menuitem declaration
Declaration of '__main __setup __calib __bedprobe' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man __start' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man __move_z' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man __test_z' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man __accept' hides previous menuitem declaration
Declaration of '__main __setup __calib __delta_calib_man __abort' hides previous menuitem declaration
Declaration of '__main __setup __dump' hides previous menuitem declaration
Declaration of '__main __temp __preheat_pla' hides previous menuitem declaration
Declaration of '__main __temp __preheat_pla __all' hides previous menuitem declaration
Declaration of '__main __temp __preheat_pla __hotend' hides previous menuitem declaration
Declaration of '__main __temp __preheat_pla __hotbed' hides previous menuitem declaration
Declaration of '__main __temp __preheat_abs' hides previous menuitem declaration
Declaration of '__main __temp __preheat_abs __all' hides previous menuitem declaration
Declaration of '__main __temp __preheat_abs __hotend' hides previous menuitem declaration
Declaration of '__main __temp __preheat_abs __hotbed' hides previous menuitem declaration
Declaration of '__main __temp __cooldown' hides previous menuitem declaration
Declaration of '__main __temp __cooldown __all' hides previous menuitem declaration
Declaration of '__main __temp __cooldown __hotend' hides previous menuitem declaration
Declaration of '__main __temp __cooldown __hotbed' hides previous menuitem declaration
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
webhooks client 3038028848: New connection
webhooks client 3038028848: Client info {'program': 'Moonraker', 'version': 'v0.8.0-384-g8f3b30a'}
Loaded MCU 'mcu' 112 commands (v0.12.0-179-g434770ea / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 INITIAL_PINS=!PA14 MCU=stm32f103xe PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu_temperature 'mcu' nominal base=357.558140 slope=-767.441860
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (70.0, 40.0)    | (25.0, 25.0)
  1   | (158.3, 40.0)   | (113.3, 25.0)
  2   | (246.7, 40.0)   | (201.7, 25.0)
  3   | (335.0, 40.0)   | (290.0, 25.0)
  4   | (335.0, 141.7)  | (290.0, 126.7)
  5   | (246.7, 141.7)  | (201.7, 126.7)
  6   | (158.3, 141.7)  | (113.3, 126.7)
  7   | (70.0, 141.7)   | (25.0, 126.7)
  8   | (70.0, 243.3)   | (25.0, 228.3)
  9   | (158.3, 243.3)  | (113.3, 228.3)
  10  | (246.7, 243.3)  | (201.7, 228.3)
  11  | (335.0, 243.3)  | (290.0, 228.3)
  12  | (335.0, 345.0)  | (290.0, 330.0)
  13  | (246.7, 345.0)  | (201.7, 330.0)
  14  | (158.3, 345.0)  | (113.3, 330.0)
  15  | (70.0, 345.0)   | (25.0, 330.0)
Starting heater checks for heater_bed
Starting heater checks for extruder
Stats 2139878.7: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=2878 bytes_read=6252 bytes_retransmit=9 bytes_invalid=0 send_seq=249 receive_seq=249 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=4603 freq=71998869  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.3 sysload=0.86 cputime=144.172 memavail=7510164 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 3038028848
webhooks: registering remote method 'reboot_machine' for connection id: 3038028848
webhooks: registering remote method 'pause_job_queue' for connection id: 3038028848
webhooks: registering remote method 'start_job_queue' for connection id: 3038028848
webhooks: registering remote method 'timelapse_newframe' for connection id: 3038028848
webhooks: registering remote method 'timelapse_saveFrames' for connection id: 3038028848
webhooks: registering remote method 'timelapse_render' for connection id: 3038028848
Stats 2139879.7: gcodein=0  mcu: mcu_awake=0.072 mcu_task_avg=0.000062 mcu_task_stddev=0.000148 bytes_write=8033 bytes_read=6945 bytes_retransmit=9 bytes_invalid=0 send_seq=356 receive_seq=355 retransmit_seq=2 srtt=0.003 rttvar=0.003 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71998228  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=35.5 SKR_Mini_E3_v2: temp=35.2 sysload=0.86 cputime=144.247 memavail=7509488 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139880.7: gcodein=0  mcu: mcu_awake=0.072 mcu_task_avg=0.000062 mcu_task_stddev=0.000148 bytes_write=8039 bytes_read=7146 bytes_retransmit=9 bytes_invalid=0 send_seq=357 receive_seq=357 retransmit_seq=2 srtt=0.003 rttvar=0.003 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997959  heater_bed: target=0 temp=23.5 pwm=0.000 raspberry_pi: temp=35.0 SKR_Mini_E3_v2: temp=35.2 sysload=0.86 cputime=144.274 memavail=7509392 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139881.7: gcodein=0  mcu: mcu_awake=0.072 mcu_task_avg=0.000062 mcu_task_stddev=0.000148 bytes_write=8045 bytes_read=7297 bytes_retransmit=9 bytes_invalid=0 send_seq=358 receive_seq=358 retransmit_seq=2 srtt=0.002 rttvar=0.003 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997591  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.2 sysload=0.86 cputime=144.287 memavail=7509020 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139882.7: gcodein=0  mcu: mcu_awake=0.072 mcu_task_avg=0.000062 mcu_task_stddev=0.000148 bytes_write=8051 bytes_read=7448 bytes_retransmit=9 bytes_invalid=0 send_seq=359 receive_seq=359 retransmit_seq=2 srtt=0.002 rttvar=0.003 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997669  heater_bed: target=0 temp=23.5 pwm=0.000 raspberry_pi: temp=34.1 SKR_Mini_E3_v2: temp=35.3 sysload=0.86 cputime=144.309 memavail=7508772 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139883.7: gcodein=0  mcu: mcu_awake=0.072 mcu_task_avg=0.000062 mcu_task_stddev=0.000148 bytes_write=8057 bytes_read=7644 bytes_retransmit=9 bytes_invalid=0 send_seq=360 receive_seq=360 retransmit_seq=2 srtt=0.002 rttvar=0.003 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997645  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=35.0 SKR_Mini_E3_v2: temp=35.1 sysload=0.87 cputime=144.323 memavail=7508824 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.6 pwm=0.000
Stats 2139884.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000013 bytes_write=8063 bytes_read=7810 bytes_retransmit=9 bytes_invalid=0 send_seq=361 receive_seq=361 retransmit_seq=2 srtt=0.002 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997514  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=35.0 SKR_Mini_E3_v2: temp=35.1 sysload=0.87 cputime=144.336 memavail=7508608 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139885.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000013 bytes_write=8069 bytes_read=7961 bytes_retransmit=9 bytes_invalid=0 send_seq=362 receive_seq=362 retransmit_seq=2 srtt=0.001 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997462  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=33.6 SKR_Mini_E3_v2: temp=35.4 sysload=0.87 cputime=144.350 memavail=7508608 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139886.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000013 bytes_write=8075 bytes_read=8157 bytes_retransmit=9 bytes_invalid=0 send_seq=363 receive_seq=363 retransmit_seq=2 srtt=0.001 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997427  heater_bed: target=0 temp=24.0 pwm=0.000 raspberry_pi: temp=35.5 SKR_Mini_E3_v2: temp=35.3 sysload=0.87 cputime=144.364 memavail=7508608 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139887.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000013 bytes_write=8081 bytes_read=8308 bytes_retransmit=9 bytes_invalid=0 send_seq=364 receive_seq=364 retransmit_seq=2 srtt=0.001 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997387  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=35.0 SKR_Mini_E3_v2: temp=35.2 sysload=0.87 cputime=144.378 memavail=7508320 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139888.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000013 bytes_write=8087 bytes_read=8459 bytes_retransmit=9 bytes_invalid=0 send_seq=365 receive_seq=365 retransmit_seq=2 srtt=0.001 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997379  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.3 sysload=0.88 cputime=144.391 memavail=7508320 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139889.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8117 bytes_read=8679 bytes_retransmit=9 bytes_invalid=0 send_seq=368 receive_seq=368 retransmit_seq=2 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997374  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=34.1 SKR_Mini_E3_v2: temp=35.2 sysload=0.88 cputime=144.406 memavail=7507840 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139890.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8147 bytes_read=8840 bytes_retransmit=9 bytes_invalid=0 send_seq=371 receive_seq=371 retransmit_seq=2 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997367  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.3 sysload=0.88 cputime=144.419 memavail=7507840 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139891.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8153 bytes_read=8991 bytes_retransmit=9 bytes_invalid=0 send_seq=372 receive_seq=372 retransmit_seq=2 srtt=0.000 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997359  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=35.0 SKR_Mini_E3_v2: temp=35.2 sysload=0.88 cputime=144.433 memavail=7507648 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139892.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8159 bytes_read=9187 bytes_retransmit=9 bytes_invalid=0 send_seq=373 receive_seq=373 retransmit_seq=2 srtt=0.000 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997349  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=35.0 SKR_Mini_E3_v2: temp=35.2 sysload=0.88 cputime=144.447 memavail=7507264 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139893.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8165 bytes_read=9338 bytes_retransmit=9 bytes_invalid=0 send_seq=374 receive_seq=374 retransmit_seq=2 srtt=0.000 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997351  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.2 sysload=0.81 cputime=144.460 memavail=7507264 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139894.7: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000015 mcu_task_stddev=0.000013 bytes_write=8195 bytes_read=9514 bytes_retransmit=9 bytes_invalid=0 send_seq=377 receive_seq=377 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997359  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.2 sysload=0.81 cputime=144.474 memavail=7506976 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139895.7: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000015 mcu_task_stddev=0.000013 bytes_write=8225 bytes_read=9720 bytes_retransmit=9 bytes_invalid=0 send_seq=380 receive_seq=380 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997349  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.2 sysload=0.81 cputime=144.490 memavail=7506636 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.3 pwm=0.000
Stats 2139896.7: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000015 mcu_task_stddev=0.000013 bytes_write=8231 bytes_read=9871 bytes_retransmit=9 bytes_invalid=0 send_seq=381 receive_seq=381 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997349  heater_bed: target=0 temp=23.4 pwm=0.000 raspberry_pi: temp=35.5 SKR_Mini_E3_v2: temp=35.0 sysload=0.81 cputime=144.507 memavail=7506636 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139897.7: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000015 mcu_task_stddev=0.000013 bytes_write=8237 bytes_read=10037 bytes_retransmit=9 bytes_invalid=0 send_seq=382 receive_seq=382 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997363  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=33.6 SKR_Mini_E3_v2: temp=35.2 sysload=0.81 cputime=144.531 memavail=7506636 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139898.7: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000015 mcu_task_stddev=0.000013 bytes_write=8243 bytes_read=10218 bytes_retransmit=9 bytes_invalid=0 send_seq=383 receive_seq=383 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997369  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=34.1 SKR_Mini_E3_v2: temp=35.2 sysload=0.74 cputime=144.554 memavail=7506444 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139899.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000010 bytes_write=8249 bytes_read=10383 bytes_retransmit=9 bytes_invalid=0 send_seq=384 receive_seq=384 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997364  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=35.0 SKR_Mini_E3_v2: temp=35.3 sysload=0.74 cputime=144.568 memavail=7506332 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.6 pwm=0.000
Stats 2139900.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000010 bytes_write=8303 bytes_read=10569 bytes_retransmit=9 bytes_invalid=0 send_seq=389 receive_seq=389 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997359  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.2 sysload=0.74 cputime=144.582 memavail=7505856 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139901.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000010 bytes_write=8309 bytes_read=10750 bytes_retransmit=9 bytes_invalid=0 send_seq=390 receive_seq=390 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997356  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=34.1 SKR_Mini_E3_v2: temp=35.3 sysload=0.74 cputime=144.596 memavail=7505860 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139902.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000010 bytes_write=8315 bytes_read=10901 bytes_retransmit=9 bytes_invalid=0 send_seq=391 receive_seq=391 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997352  heater_bed: target=0 temp=23.8 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.3 sysload=0.74 cputime=144.609 memavail=7505860 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.6 pwm=0.000
Stats 2139903.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000010 bytes_write=8345 bytes_read=11077 bytes_retransmit=9 bytes_invalid=0 send_seq=394 receive_seq=394 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997349  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.1 sysload=0.68 cputime=144.624 memavail=7505764 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139904.7: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000016 mcu_task_stddev=0.000014 bytes_write=8375 bytes_read=11283 bytes_retransmit=9 bytes_invalid=0 send_seq=397 receive_seq=397 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997349  heater_bed: target=0 temp=23.9 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.2 sysload=0.68 cputime=144.638 memavail=7511004 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139905.7: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000016 mcu_task_stddev=0.000014 bytes_write=8381 bytes_read=11434 bytes_retransmit=9 bytes_invalid=0 send_seq=398 receive_seq=398 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997347  heater_bed: target=0 temp=23.5 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.2 sysload=0.68 cputime=144.653 memavail=7511268 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139906.7: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000016 mcu_task_stddev=0.000014 bytes_write=8387 bytes_read=11600 bytes_retransmit=9 bytes_invalid=0 send_seq=399 receive_seq=399 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997345  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=36.0 SKR_Mini_E3_v2: temp=35.2 sysload=0.68 cputime=144.669 memavail=7511424 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139907.7: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000016 mcu_task_stddev=0.000014 bytes_write=8393 bytes_read=11781 bytes_retransmit=9 bytes_invalid=0 send_seq=400 receive_seq=400 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997345  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=34.1 SKR_Mini_E3_v2: temp=35.2 sysload=0.68 cputime=144.682 memavail=7511328 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139908.7: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000016 mcu_task_stddev=0.000014 bytes_write=8399 bytes_read=11932 bytes_retransmit=9 bytes_invalid=0 send_seq=401 receive_seq=401 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997344  heater_bed: target=0 temp=23.8 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.3 sysload=0.71 cputime=144.696 memavail=7511136 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139909.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8405 bytes_read=12112 bytes_retransmit=9 bytes_invalid=0 send_seq=402 receive_seq=402 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997341  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.2 sysload=0.71 cputime=144.710 memavail=7510560 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139910.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8411 bytes_read=12293 bytes_retransmit=9 bytes_invalid=0 send_seq=403 receive_seq=403 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997341  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=35.0 SKR_Mini_E3_v2: temp=35.1 sysload=0.71 cputime=144.724 memavail=7510176 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139911.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8417 bytes_read=12444 bytes_retransmit=9 bytes_invalid=0 send_seq=404 receive_seq=404 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997341  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.1 sysload=0.71 cputime=144.738 memavail=7509708 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139912.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8423 bytes_read=12610 bytes_retransmit=9 bytes_invalid=0 send_seq=405 receive_seq=405 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997341  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.2 sysload=0.71 cputime=144.752 memavail=7509132 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139913.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8429 bytes_read=12791 bytes_retransmit=9 bytes_invalid=0 send_seq=406 receive_seq=406 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997346  heater_bed: target=0 temp=23.8 pwm=0.000 raspberry_pi: temp=35.5 SKR_Mini_E3_v2: temp=35.1 sysload=0.65 cputime=144.774 memavail=7508652 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139914.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000013 bytes_write=8483 bytes_read=12977 bytes_retransmit=9 bytes_invalid=0 send_seq=411 receive_seq=411 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997346  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=35.0 SKR_Mini_E3_v2: temp=35.2 sysload=0.65 cputime=144.789 memavail=7512992 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139915.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000013 bytes_write=8489 bytes_read=13143 bytes_retransmit=9 bytes_invalid=0 send_seq=412 receive_seq=412 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997352  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=35.5 SKR_Mini_E3_v2: temp=35.2 sysload=0.65 cputime=144.802 memavail=7512416 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.2 pwm=0.000
Stats 2139916.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000013 bytes_write=8495 bytes_read=13324 bytes_retransmit=9 bytes_invalid=0 send_seq=413 receive_seq=413 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997352  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=34.1 SKR_Mini_E3_v2: temp=35.1 sysload=0.65 cputime=144.816 memavail=7512032 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139917.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000013 bytes_write=8501 bytes_read=13475 bytes_retransmit=9 bytes_invalid=0 send_seq=414 receive_seq=414 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997350  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=34.1 SKR_Mini_E3_v2: temp=35.2 sysload=0.65 cputime=144.830 memavail=7512240 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139918.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000015 mcu_task_stddev=0.000013 bytes_write=8513 bytes_read=13657 bytes_retransmit=9 bytes_invalid=0 send_seq=416 receive_seq=416 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997350  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=35.0 SKR_Mini_E3_v2: temp=35.1 sysload=0.60 cputime=144.845 memavail=7512308 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139919.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8519 bytes_read=13852 bytes_retransmit=9 bytes_invalid=0 send_seq=417 receive_seq=417 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997357  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=33.6 SKR_Mini_E3_v2: temp=35.2 sysload=0.60 cputime=144.859 memavail=7511168 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139920.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8525 bytes_read=14003 bytes_retransmit=9 bytes_invalid=0 send_seq=418 receive_seq=418 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997355  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=35.5 SKR_Mini_E3_v2: temp=35.2 sysload=0.60 cputime=144.873 memavail=7511692 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139921.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8531 bytes_read=14169 bytes_retransmit=9 bytes_invalid=0 send_seq=419 receive_seq=419 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997353  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=35.0 SKR_Mini_E3_v2: temp=35.2 sysload=0.60 cputime=144.885 memavail=7511208 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139922.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8537 bytes_read=14350 bytes_retransmit=9 bytes_invalid=0 send_seq=420 receive_seq=420 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997352  heater_bed: target=0 temp=23.8 pwm=0.000 raspberry_pi: temp=35.0 SKR_Mini_E3_v2: temp=35.1 sysload=0.60 cputime=144.903 memavail=7510396 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139923.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8567 bytes_read=14511 bytes_retransmit=9 bytes_invalid=0 send_seq=423 receive_seq=423 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997361  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=36.0 SKR_Mini_E3_v2: temp=35.1 sysload=0.55 cputime=144.917 memavail=7510012 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.3 pwm=0.000
Stats 2139924.7: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000015 mcu_task_stddev=0.000012 bytes_write=8597 bytes_read=14702 bytes_retransmit=9 bytes_invalid=0 send_seq=426 receive_seq=426 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997362  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=34.1 SKR_Mini_E3_v2: temp=35.2 sysload=0.55 cputime=144.932 memavail=7509048 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139925.7: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000015 mcu_task_stddev=0.000012 bytes_write=8603 bytes_read=14883 bytes_retransmit=9 bytes_invalid=0 send_seq=427 receive_seq=427 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997363  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=34.1 SKR_Mini_E3_v2: temp=35.0 sysload=0.55 cputime=144.946 memavail=7507996 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139926.7: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000015 mcu_task_stddev=0.000012 bytes_write=8609 bytes_read=15034 bytes_retransmit=9 bytes_invalid=0 send_seq=428 receive_seq=428 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997362  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=35.0 SKR_Mini_E3_v2: temp=35.2 sysload=0.55 cputime=144.960 memavail=7507404 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139927.7: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000015 mcu_task_stddev=0.000012 bytes_write=8615 bytes_read=15200 bytes_retransmit=9 bytes_invalid=0 send_seq=429 receive_seq=429 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997363  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.2 sysload=0.55 cputime=144.974 memavail=7511860 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139928.7: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000015 mcu_task_stddev=0.000012 bytes_write=8621 bytes_read=15381 bytes_retransmit=9 bytes_invalid=0 send_seq=430 receive_seq=430 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997366  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.1 sysload=0.51 cputime=144.988 memavail=7511736 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
Stats 2139929.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8627 bytes_read=15546 bytes_retransmit=9 bytes_invalid=0 send_seq=431 receive_seq=431 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997369  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.1 sysload=0.51 cputime=145.003 memavail=7510872 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139930.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8633 bytes_read=15712 bytes_retransmit=9 bytes_invalid=0 send_seq=432 receive_seq=432 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997370  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=35.0 SKR_Mini_E3_v2: temp=35.1 sysload=0.51 cputime=145.016 memavail=7510296 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139931.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8639 bytes_read=15893 bytes_retransmit=9 bytes_invalid=0 send_seq=433 receive_seq=433 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997371  heater_bed: target=0 temp=23.6 pwm=0.000 raspberry_pi: temp=36.0 SKR_Mini_E3_v2: temp=35.2 sysload=0.51 cputime=145.031 memavail=7509912 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139932.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8645 bytes_read=16041 bytes_retransmit=9 bytes_invalid=0 send_seq=434 receive_seq=434 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997373  heater_bed: target=0 temp=23.9 pwm=0.000 raspberry_pi: temp=34.6 SKR_Mini_E3_v2: temp=35.2 sysload=0.51 cputime=145.046 memavail=7509816 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.4 pwm=0.000
Stats 2139933.7: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000014 mcu_task_stddev=0.000009 bytes_write=8675 bytes_read=16205 bytes_retransmit=9 bytes_invalid=0 send_seq=437 receive_seq=437 retransmit_seq=2 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=71997373  heater_bed: target=0 temp=23.7 pwm=0.000 raspberry_pi: temp=35.0 SKR_Mini_E3_v2: temp=35.2 sysload=0.47 cputime=145.060 memavail=7509432 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=23.5 pwm=0.000
